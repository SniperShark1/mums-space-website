{"file_contents":{"ADMIN_INSTRUCTIONS.md":{"content":"# Admin Panel Instructions for Mum's Space Website\n\n## How to Access Your Admin Panel\n\n**Step 1: Navigate to Admin URL**\n- Type `/admin` at the end of your website URL\n- Example: `https://yourwebsite.com/admin`\n- This URL is secret - regular visitors don't know it exists\n\n**Step 2: Enter Password**\n- Password: `MumsSpace2024!`\n- This is your private admin password\n- Change it after deployment if desired\n\n## What Regular Website Visitors See\n\n✅ **Regular visitors can only see:**\n- Home page with app download buttons\n- Reviews page (read-only)\n- Contact information\n- Policies\n\n❌ **Regular visitors CANNOT see:**\n- Admin panel (they don't know `/admin` exists)\n- Upload forms\n- Download statistics\n- Admin controls\n\n## What You See as Admin\n\n✅ **In the admin panel you can:**\n- View total download statistics\n- See all submitted reviews\n- Get instructions for uploading app files\n- Monitor website activity\n\n## Admin Panel Controls\n\n**Logout Buttons (top-right corner):**\n- **Blue \"View Website\" button** - Goes back to public website\n- **Red \"Logout\" button** - Logs you out of admin panel\n\n**Session Management:**\n- You stay logged in during your browser session\n- Close browser or click logout to end session\n- After 3 failed login attempts, access locks for 5 minutes\n\n## Security Features\n\n1. **Hidden URL** - `/admin` is not linked anywhere on public site\n2. **Password Protection** - 12-character password required\n3. **Session-Based** - Temporary login, not permanent\n4. **Attempt Limiting** - Locks after failed attempts\n5. **No Public Upload** - Only you can add files via FTP/hosting panel\n\n## How to Upload App Files (When Ready)\n\n**You upload files through your hosting provider, not the website:**\n\n1. **Access your hosting file manager** (FTP, cPanel, etc.)\n2. **Upload to `/public/downloads/` folder**\n3. **Name files exactly:**\n   - `mums-space-android.apk`\n   - `mums-space-ios.ipa`\n   - `mums-space-pc.exe`\n4. **Download buttons automatically work** once files exist\n\n## Summary\n\n- **Your website is secure** - only you have admin access\n- **Regular users** see normal website with download buttons\n- **Admin panel** is your private management area\n- **File uploads** happen through hosting provider, not website\n- **Password protects** all admin functions\n\nThe admin system is completely separate from the public website. Regular visitors have no way to access admin features.","size_bytes":2406},"CHANGE_PASSWORD_GUIDE.md":{"content":"# How to Change Your Admin Password\n\n## Quick Steps to Change Password\n\n1. **Open the admin panel file:**\n   - Go to: `client/src/pages/admin-panel.tsx`\n   - Look for line 191\n\n2. **Find this line:**\n   ```javascript\n   <AdminAuth requiredPassword=\"MumsSpace2024!\">\n   ```\n\n3. **Change the password to your own:**\n   ```javascript\n   <AdminAuth requiredPassword=\"YourNewPassword123!\">\n   ```\n\n## Password Requirements\n- **Minimum 12 characters** (enforced by the system)\n- **Mix of letters and numbers** recommended\n- **Special characters** allowed (!@#$%^&*)\n- **No spaces** in the password\n\n## Example Password Changes\n\n**Current:**\n```javascript\n<AdminAuth requiredPassword=\"MumsSpace2024!\">\n```\n\n**Change to your own (examples):**\n```javascript\n<AdminAuth requiredPassword=\"MySecret123456!\">\n```\nor\n```javascript\n<AdminAuth requiredPassword=\"Admin789Private\">\n```\nor\n```javascript\n<AdminAuth requiredPassword=\"Owner2025Secure!\">\n```\n\n## After Changing the Password\n\n1. **Save the file**\n2. **The website will automatically restart**\n3. **Your new password is now active**\n4. **Old password no longer works**\n\n## Important Notes\n\n- **Only you should know this password**\n- **Write it down somewhere safe**\n- **Don't share it with anyone**\n- **Change it regularly for security**\n\n## Where to Make the Change\n\n**File location:** `client/src/pages/admin-panel.tsx`\n**Line number:** 191\n**What to change:** Replace `\"MumsSpace2024!\"` with your own password in quotes\n\n## Testing Your New Password\n\n1. Go to `/admin` on your website\n2. Enter your new password\n3. Should work immediately after saving the file\n\nYour admin area will be completely secure with your custom password!","size_bytes":1676},"DEPLOYMENT_GUIDE.md":{"content":"# Deployment Guide for Mum's Space Website\n\n## Overview\nThis guide explains how to deploy your Mum's Space website to cheap hosting platforms and set up app file downloads.\n\n## Recommended Hosting Platforms (Budget-Friendly)\n\n### 1. Railway ($5/month)\n- **Best for:** Full-stack apps with database\n- **Includes:** PostgreSQL database, automatic deployments\n- **Setup:** Connect GitHub repo, Railway handles everything\n- **URL:** https://railway.app\n\n### 2. Vercel (Free tier available)\n- **Best for:** Frontend + serverless functions\n- **Database:** Use separate service like Neon (free tier)\n- **Setup:** Connect GitHub, automatic deployments\n- **URL:** https://vercel.com\n\n### 3. Netlify (Free tier available)\n- **Best for:** Static sites + serverless functions\n- **Database:** Use separate service like Supabase (free tier)\n- **Setup:** Drag & drop or GitHub integration\n- **URL:** https://netlify.com\n\n### 4. DigitalOcean App Platform ($5/month)\n- **Best for:** Full control, includes database add-ons\n- **Setup:** Connect GitHub repo\n- **URL:** https://digitalocean.com\n\n## Setting Up App File Downloads\n\n### Option 1: Simple File Hosting (Recommended for Startups)\n\n1. **Create a `public/downloads` folder in your project**\n2. **Add your app files manually:**\n   ```\n   public/downloads/\n   ├── mums-space-android.apk\n   ├── mums-space-ios.ipa  \n   └── mums-space-pc.exe\n   ```\n\n3. **Update download buttons to link directly to files:**\n   - Android: `/downloads/mums-space-android.apk`\n   - iPhone: `/downloads/mums-space-ios.ipa`\n   - PC: `/downloads/mums-space-pc.exe`\n\n### Option 2: Cloud Storage (Scalable)\n\n1. **Use free cloud storage:**\n   - **Google Drive:** Make files public, get direct download links\n   - **Dropbox:** Create public download links\n   - **GitHub Releases:** Upload files to GitHub releases\n\n2. **Update download buttons to use cloud links**\n\n## File Upload Security\n\n### For Manual Updates (Secure)\n1. **Use FTP/SFTP** to upload files directly to your server\n2. **Use your hosting provider's file manager**\n3. **Update via GitHub** - commit new files to your repo\n\n### Never Create Public Upload Forms\n- Public upload forms are security risks\n- Anyone could upload malicious files\n- Only you should have upload access\n\n## Modified Download Implementation\n\nLet me update your download buttons to handle real file downloads:\n\n```javascript\n// Updated download handler that serves actual files\nconst handleDownload = async (platform: string) => {\n  const fileUrls = {\n    'iPhone': '/downloads/mums-space-ios.ipa',\n    'Android': '/downloads/mums-space-android.apk',\n    'PC': '/downloads/mums-space-pc.exe'\n  };\n  \n  const fileUrl = fileUrls[platform];\n  if (fileUrl) {\n    // Increment download counter\n    await fetch('/api/download', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ platform })\n    });\n    \n    // Start download\n    window.open(fileUrl, '_blank');\n  }\n};\n```\n\n## Environment Variables Needed\n\n```bash\n# Database\nDATABASE_URL=your_database_connection_string\n\n# Optional: File storage\nUPLOAD_FOLDER=./public/downloads\nMAX_FILE_SIZE=100MB\n```\n\n## Deployment Steps\n\n### For Railway:\n1. Create account at railway.app\n2. Connect your GitHub repository\n3. Add DATABASE_URL environment variable\n4. Deploy automatically\n\n### For Vercel:\n1. Create account at vercel.com\n2. Connect GitHub repository\n3. Add DATABASE_URL to environment variables\n4. Deploy automatically\n\n### For Manual Deployment:\n1. Build the project: `npm run build`\n2. Upload `dist` folder to your web host\n3. Set up environment variables\n4. Configure your web server\n\n## File Management Best Practices\n\n1. **Version your app files:**\n   ```\n   downloads/\n   ├── v1.0/\n   │   ├── mums-space-android-v1.0.apk\n   │   └── mums-space-ios-v1.0.ipa\n   └── v1.1/\n       ├── mums-space-android-v1.1.apk\n       └── mums-space-ios-v1.1.ipa\n   ```\n\n2. **Update download links when releasing new versions**\n\n3. **Keep old versions available for compatibility**\n\n## Security Considerations\n\n- **Password-protected admin area** (`/admin` with 12-character password)\n- **Never expose upload functionality publicly**\n- **Use HTTPS for file downloads**\n- **Validate file types and sizes**\n- **Regular security updates**\n- **Monitor download logs for abuse**\n\n## Admin Access\n\nYour website includes a secure admin panel at `/admin` with:\n- **Default password:** `MumsSpace2024!` (change this after deployment)\n- **Features:** Download statistics, review management, file upload instructions\n- **Security:** Session-based auth, attempt limiting, automatic lockout\n- **Access:** Only you should know this URL and password\n\n## Cost Breakdown (Monthly)\n\n| Platform | Free Tier | Paid Tier | Database |\n|----------|-----------|-----------|----------|\n| Railway | No | $5 | Included |\n| Vercel | Yes (limited) | $20 | Separate ($0-25) |\n| Netlify | Yes (limited) | $19 | Separate ($0-25) |\n| DigitalOcean | No | $5 | $15 add-on |\n\n## Recommended for Startups: Railway\n- $5/month total cost\n- Database included\n- Easy deployment\n- Good performance\n- Scales as you grow\n\nWould you like me to implement the direct file download approach instead of the upload system?","size_bytes":5266},"REVIEW_SETUP_INSTRUCTIONS.md":{"content":"# Review System Setup Instructions\n\n## For App Developers: How to Integrate Review Button\n\n### 1. Add Review Button to Your App\n\nAdd a \"Write Review\" or \"Rate App\" button in your app's settings, menu, or after positive user interactions.\n\n### 2. Button Action - Open Website Review Page\n\nWhen users tap the review button, open this URL with their username parameter:\n\n```\nhttps://your-website-domain.com/submit-review?userName=[USER_ONLINE_NAME]\n```\n\n**Important:** Replace `[USER_ONLINE_NAME]` with the actual user's online name from your app (e.g., \"viplounger\")\n\n**Example implementations:**\n\n**React Native:**\n```javascript\nimport { Linking } from 'react-native';\n\nconst openReviewPage = (userName) => {\n  const encodedUserName = encodeURIComponent(userName);\n  const reviewUrl = `https://your-website-domain.com/submit-review?userName=${encodedUserName}`;\n  Linking.openURL(reviewUrl);\n};\n\n// Usage example:\n// openReviewPage(\"viplounger\");\n```\n\n**Flutter:**\n```dart\nimport 'package:url_launcher/url_launcher.dart';\n\nvoid openReviewPage(String userName) async {\n  final encodedUserName = Uri.encodeComponent(userName);\n  final url = 'https://your-website-domain.com/submit-review?userName=$encodedUserName';\n  if (await canLaunch(url)) {\n    await launch(url);\n  }\n}\n\n// Usage example:\n// openReviewPage(\"viplounger\");\n```\n\n**Native Android (Java/Kotlin):**\n```java\n// Java\npublic void openReviewPage(String userName) {\n    String encodedUserName = URLEncoder.encode(userName, \"UTF-8\");\n    String url = \"https://your-website-domain.com/submit-review?userName=\" + encodedUserName;\n    Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\n    startActivity(browserIntent);\n}\n\n// Kotlin\nfun openReviewPage(userName: String) {\n    val encodedUserName = URLEncoder.encode(userName, \"UTF-8\")\n    val url = \"https://your-website-domain.com/submit-review?userName=$encodedUserName\"\n    val browserIntent = Intent(Intent.ACTION_VIEW, Uri.parse(url))\n    startActivity(browserIntent)\n}\n\n// Usage example:\n// openReviewPage(\"viplounger\");\n```\n\n**Native iOS (Swift):**\n```swift\nfunc openReviewPage(userName: String) {\n    let encodedUserName = userName.addingPercentEncoding(withAllowedCharacters: .urlQueryAllowed) ?? \"\"\n    let urlString = \"https://your-website-domain.com/submit-review?userName=\\(encodedUserName)\"\n    if let url = URL(string: urlString) {\n        UIApplication.shared.open(url)\n    }\n}\n\n// Usage example:\n// openReviewPage(\"viplounger\")\n```\n\n### 3. What Happens Next\n\n1. User taps the review button in your app\n2. Their default browser opens to the secure review submission page\n3. System verifies they came from the app (checks for username parameter)\n4. User can:\n   - See their app username already filled in (e.g., \"viplounger\")\n   - Select 1-5 star rating by clicking stars\n   - Write their review text\n   - Submit the review\n5. Review is automatically marked as \"verified\" since it came from the app\n6. Review appears immediately on the public reviews page with their online name\n7. User sees a success message\n\n**Security:** If someone tries to access the review form directly without coming from the app, they'll see an \"Access Restricted\" message and be redirected to view existing reviews only.\n\n## For Website Admin: Review Management\n\n### Review Form Features\n- **Star Rating**: Interactive 1-5 star selection\n- **User Name**: Text input for reviewer name\n- **Review Text**: Textarea for detailed review\n- **Auto-Verification**: Reviews from app are automatically marked as verified\n- **Real-time Updates**: Reviews appear immediately on the reviews page\n\n### API Endpoints\n- **Submit Review**: `POST /api/reviews`\n- **Get All Reviews**: `GET /api/reviews`\n- **Download Stats**: `GET /api/download-stats`\n\n### Review Data Structure\n```json\n{\n  \"userName\": \"viplounger\",\n  \"rating\": 5,\n  \"reviewText\": \"This app has been amazing for connecting with other mums!\",\n  \"verified\": true\n}\n```\n\n## Best Practices\n\n### For App Integration\n1. **Timing**: Show review prompt after positive interactions (successful chat, helpful content, etc.)\n2. **Frequency**: Don't spam users - limit to once per app version or significant time period\n3. **Context**: Provide context like \"Help other mums discover our community\"\n4. **Optional**: Make it clear that reviewing is optional and appreciated\n\n### For Review Quality\n1. **Authentic Usernames**: User's app username automatically carries over (e.g., \"viplounger\")\n2. **Helpful Content**: Guide users to write helpful, specific reviews\n3. **Positive Focus**: Reviews should highlight what users love about the app\n4. **Community Impact**: Emphasize how reviews help other mothers find the community\n\n## Technical Details\n\n### Review Form Validation\n- Name: Minimum 2 characters\n- Rating: Required, 1-5 stars\n- Review Text: Minimum 10 characters\n- All fields are required\n\n### Success Flow\n1. Form submission shows loading state\n2. API call creates review in database\n3. Success message displays with green checkmark\n4. Option to write another review\n5. Reviews page refreshes to show new review\n\n### Error Handling\n- Network errors show retry option\n- Validation errors highlight specific fields\n- Server errors show user-friendly messages\n\n## URL Parameters (Optional Enhancement)\n\nYou can pre-fill the form by adding URL parameters:\n\n```\nhttps://your-website-domain.com/submit-review?userName=viplounger&rating=5\n```\n\n**Parameters:**\n- `userName`: **Required** - User's online name from the app (automatically filled and read-only)\n- `rating`: Optional pre-selected rating (1-5)\n\n**Important:** The `userName` parameter is required for access. Without it, users will see an access restriction message.\n\n## Analytics & Monitoring\n\nThe system automatically tracks:\n- Total number of reviews\n- Average rating\n- Review submission success/failure rates\n- Most common review themes (manual analysis)\n\n## Support\n\nIf you need help implementing this system or have questions about the integration, refer to the website's technical documentation or contact the development team.","size_bytes":6051},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Mum's Space Official Website\n\n## Overview\n\nThis is a React-based promotional website for Mum's Space, a women-only community app. The website is built with a modern full-stack architecture using React frontend and Express backend, designed to provide information about the app and facilitate downloads across multiple platforms (iPhone, Android, PC).\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## Recent Changes (August 2025)\n\n### Pre-Launch Production Optimizations\n- **SEO Enhancement**: Added comprehensive meta tags, Open Graph, Twitter Cards, structured data (JSON-LD)\n- **Security**: Implemented rate limiting for newsletter endpoint (3 requests per 15 minutes)\n- **Accessibility**: Added ARIA labels and test-ids to all interactive elements\n- **Performance**: Optimized image loading, added robots.txt and sitemap.xml\n- **Error Handling**: Created error boundary component for graceful error recovery\n- **Build Verification**: Confirmed production build generates correctly (449KB JS, 69KB CSS)\n\n### Founders Program Launch\n- **New Section**: Added Founders Club with $59.99 AUD lifetime membership\n- **Limited Spots**: 100 founding members with exclusive benefits and Wall of Founders\n- **Social Integration**: Facebook follow button, Instagram placeholder removed per user request\n\n### Data Collection Clarification\n- **Privacy Policy**: Updated to reflect minimal data collection (names/usernames only via Google auth)\n- **User Rights**: Added account deletion options through profile page or support contact\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript\n- **Styling**: Tailwind CSS with custom color scheme based on soft pink theme (#f6cbcd)\n- **UI Components**: Radix UI with shadcn/ui component library\n- **Routing**: Wouter for client-side routing\n- **State Management**: TanStack Query for server state management\n- **Form Handling**: React Hook Form with Zod validation\n- **Build Tool**: Vite for development and production builds\n\n### Backend Architecture\n- **Runtime**: Node.js with Express server\n- **Language**: TypeScript with ES modules\n- **Database**: PostgreSQL with Drizzle ORM\n- **Database Provider**: Neon Database (@neondatabase/serverless)\n- **Session Management**: PostgreSQL session store (connect-pg-simple)\n\n### Design System\n- **Typography**: Bodoni Moda Google Font\n- **Color Scheme**: Soft pink theme with muted tones\n- **Component Library**: Custom shadcn/ui components with Radix UI primitives\n- **Responsive Design**: Mobile-first approach with Tailwind breakpoints\n\n## Key Components\n\n### Frontend Components\n- **Navigation**: Sticky navigation with mobile hamburger menu\n- **HeartBackground**: Decorative heart elements with low opacity\n- **Footer**: Site-wide footer with navigation links\n- **Home Page**: Single-page application with sections for home, download, about, contact, and policies\n- **Form Components**: Contact form with validation and toast notifications\n\n### Backend Components\n- **Server**: Express application with middleware for JSON parsing and logging\n- **Routes**: Modular route registration system (currently minimal)\n- **Storage**: Abstract storage interface with in-memory implementation (designed for PostgreSQL upgrade)\n- **Vite Integration**: Development server integration with HMR support\n\n### Database Schema\n- **Users Table**: Basic user structure with username/password (foundation for future features)\n- **Schema Validation**: Drizzle-Zod integration for type-safe database operations\n\n## Data Flow\n\n1. **Client-Side Routing**: Wouter handles navigation without page refreshes\n2. **Form Submission**: React Hook Form → Zod validation → Toast notifications\n3. **API Communication**: TanStack Query for server communication (prepared for future endpoints)\n4. **Database Operations**: Drizzle ORM → PostgreSQL via Neon serverless connection\n5. **Asset Serving**: Vite handles static assets and module bundling\n\n## External Dependencies\n\n### Core Framework Dependencies\n- **React Ecosystem**: React 18, React DOM, React Hook Form\n- **Database**: Drizzle ORM, Neon Database serverless connector\n- **UI/UX**: Radix UI primitives, Lucide React icons\n- **Development**: Vite, TypeScript, PostCSS, Autoprefixer\n\n### Styling and Components\n- **Tailwind CSS**: Utility-first CSS framework\n- **shadcn/ui**: Pre-built accessible components\n- **class-variance-authority**: Component variant management\n- **clsx/tailwind-merge**: Conditional CSS class handling\n\n### Validation and Forms\n- **Zod**: Schema validation\n- **React Hook Form**: Form state management\n- **@hookform/resolvers**: Zod integration with React Hook Form\n\n## Deployment Strategy\n\n### Build Process\n- **Frontend**: Vite builds React app to `dist/public`\n- **Backend**: esbuild bundles Express server to `dist/index.js`\n- **Database**: Drizzle migrations generated to `./migrations`\n\n### Environment Configuration\n- **Database**: Requires `DATABASE_URL` environment variable for PostgreSQL connection\n- **Development**: Hot module replacement via Vite dev server\n- **Production**: Express serves static assets and API routes\n\n### Replit Integration\n- **Development Banner**: Automatic Replit branding in development mode\n- **Runtime Error Overlay**: Development error handling\n- **Cartographer Plugin**: Replit-specific development tools\n\n### Scripts\n- `dev`: Development server with tsx and Vite HMR\n- `build`: Production build (Vite + esbuild)\n- `start`: Production server\n- `db:push`: Apply database schema changes via Drizzle\n\nThe architecture is designed for easy scaling, with clear separation between presentation and data layers, and preparation for future features like user authentication and community management.","size_bytes":5745},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      fontFamily: {\n        'bodoni': ['Bodoni Moda', 'serif'],\n        'sans': ['Bodoni Moda', 'serif'],\n        'serif': ['Bodoni Moda', 'serif'],\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2785},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertNewsletterSchema, insertReviewSchema, adminReplySchema } from \"@shared/schema\";\n\n// Simple rate limiting store (in production, use Redis or similar)\nconst rateLimitStore = new Map<string, { count: number; resetTime: number }>();\n\nfunction rateLimit(ip: string, maxRequests: number = 5, windowMs: number = 15 * 60 * 1000): boolean {\n  const now = Date.now();\n  const clientData = rateLimitStore.get(ip);\n  \n  if (!clientData || now > clientData.resetTime) {\n    rateLimitStore.set(ip, { count: 1, resetTime: now + windowMs });\n    return true;\n  }\n  \n  if (clientData.count >= maxRequests) {\n    return false;\n  }\n  \n  clientData.count++;\n  return true;\n}\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Newsletter signup endpoint with rate limiting\n  app.post(\"/api/newsletter/signup\", async (req, res) => {\n    // Basic rate limiting\n    const clientIp = req.ip || req.connection.remoteAddress || 'unknown';\n    if (!rateLimit(clientIp, 3, 15 * 60 * 1000)) { // 3 requests per 15 minutes\n      return res.status(429).json({ error: \"Too many requests. Please try again later.\" });\n    }\n    try {\n      const validatedData = insertNewsletterSchema.parse(req.body);\n      \n      // Check if email already exists in local storage\n      const existingSignups = await storage.getNewsletterSignups();\n      const emailExists = existingSignups.some(signup => signup.email === validatedData.email);\n      \n      if (emailExists) {\n        return res.status(400).json({ error: \"Email already subscribed\" });\n      }\n\n      // Add to Mailchimp\n      const mailchimpApiKey = process.env.MAILCHIMP_API_KEY;\n      const mailchimpListId = process.env.MAILCHIMP_LIST_ID;\n      const mailchimpServerPrefix = process.env.MAILCHIMP_SERVER_PREFIX;\n\n      if (!mailchimpApiKey || !mailchimpListId || !mailchimpServerPrefix) {\n        console.error(\"Missing Mailchimp configuration\");\n        return res.status(500).json({ error: \"Newsletter service not configured\" });\n      }\n\n      // Add subscriber to Mailchimp\n      const mailchimpUrl = `https://${mailchimpServerPrefix}.api.mailchimp.com/3.0/lists/${mailchimpListId}/members`;\n      \n      const mailchimpResponse = await fetch(mailchimpUrl, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Basic ${Buffer.from(`anystring:${mailchimpApiKey}`).toString('base64')}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email_address: validatedData.email,\n          status: 'subscribed',\n          merge_fields: {}\n        }),\n      });\n\n      if (!mailchimpResponse.ok) {\n        const mailchimpError = await mailchimpResponse.json();\n        console.error(\"Mailchimp error:\", mailchimpError);\n        \n        // Check if it's a duplicate email error\n        if (mailchimpError.title === \"Member Exists\") {\n          return res.status(400).json({ error: \"Email already subscribed\" });\n        }\n        \n        return res.status(500).json({ error: \"Failed to subscribe to newsletter\" });\n      }\n\n      // Store locally as backup\n      const newsletterSignup = await storage.addNewsletterSignup(validatedData);\n      \n      res.status(201).json({ success: true, message: \"Successfully subscribed to newsletter\" });\n    } catch (error) {\n      console.error(\"Newsletter signup error:\", error);\n      res.status(400).json({ error: \"Invalid email address\" });\n    }\n  });\n\n  // Get all newsletter signups (for admin purposes)\n  app.get(\"/api/newsletter/signups\", async (req, res) => {\n    try {\n      const signups = await storage.getNewsletterSignups();\n      res.json(signups);\n    } catch (error) {\n      console.error(\"Get newsletter signups error:\", error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n\n  // Reviews endpoints\n  app.get(\"/api/reviews\", async (req, res) => {\n    try {\n      const reviews = await storage.getReviews();\n      res.json(reviews);\n    } catch (error) {\n      console.error(\"Get reviews error:\", error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n\n  app.post(\"/api/reviews\", async (req, res) => {\n    try {\n      const validatedData = insertReviewSchema.parse(req.body);\n      const review = await storage.addReview(validatedData);\n      res.status(201).json(review);\n    } catch (error) {\n      console.error(\"Add review error:\", error);\n      res.status(400).json({ error: \"Invalid review data\" });\n    }\n  });\n\n  // Admin reply to review endpoint\n  app.post(\"/api/reviews/reply\", async (req, res) => {\n    try {\n      const validatedData = adminReplySchema.parse(req.body);\n      const updatedReview = await storage.addAdminReply(validatedData.reviewId, validatedData.adminReply);\n      res.json(updatedReview);\n    } catch (error) {\n      console.error(\"Add admin reply error:\", error);\n      res.status(400).json({ error: \"Invalid reply data\" });\n    }\n  });\n\n  // Download stats endpoints\n  app.get(\"/api/download-stats\", async (req, res) => {\n    try {\n      const stats = await storage.getDownloadStats();\n      res.json(stats);\n    } catch (error) {\n      console.error(\"Get download stats error:\", error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n\n  app.post(\"/api/download/:platform\", async (req, res) => {\n    try {\n      const { platform } = req.params;\n      const stats = await storage.updateDownloadStats(platform);\n      res.json(stats);\n    } catch (error) {\n      console.error(\"Update download stats error:\", error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":5784},"server/storage.ts":{"content":"import { type User, type InsertUser, type NewsletterSignup, type InsertNewsletter, type Review, type InsertReview, type DownloadStats, type InsertDownloadStats, type AdminReply } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  addNewsletterSignup(newsletter: InsertNewsletter): Promise<NewsletterSignup>;\n  getNewsletterSignups(): Promise<NewsletterSignup[]>;\n  getReviews(): Promise<Review[]>;\n  addReview(review: InsertReview): Promise<Review>;\n  addAdminReply(reviewId: string, adminReply: string): Promise<Review>;\n  getDownloadStats(): Promise<DownloadStats[]>;\n  updateDownloadStats(platform: string): Promise<DownloadStats>;\n  initializeDownloadStats(): Promise<void>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private newsletters: Map<string, NewsletterSignup>;\n  private reviews: Map<string, Review>;\n  private downloadStats: Map<string, DownloadStats>;\n\n  constructor() {\n    this.users = new Map();\n    this.newsletters = new Map();\n    this.reviews = new Map();\n    this.downloadStats = new Map();\n    this.initializeDownloadStats();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async addNewsletterSignup(insertNewsletter: InsertNewsletter): Promise<NewsletterSignup> {\n    const id = randomUUID();\n    const newsletter: NewsletterSignup = { \n      ...insertNewsletter, \n      id, \n      subscribedAt: new Date() \n    };\n    this.newsletters.set(id, newsletter);\n    return newsletter;\n  }\n\n  async getNewsletterSignups(): Promise<NewsletterSignup[]> {\n    return Array.from(this.newsletters.values());\n  }\n\n  async getReviews(): Promise<Review[]> {\n    return Array.from(this.reviews.values()).sort((a, b) => \n      new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n    );\n  }\n\n  async addReview(insertReview: InsertReview): Promise<Review> {\n    const id = randomUUID();\n    const review: Review = {\n      ...insertReview,\n      verified: insertReview.verified ?? false,\n      id,\n      createdAt: new Date(),\n      adminReply: null,\n      adminReplyAt: null\n    };\n    this.reviews.set(id, review);\n    return review;\n  }\n\n  async addAdminReply(reviewId: string, adminReply: string): Promise<Review> {\n    const review = this.reviews.get(reviewId);\n    if (!review) {\n      throw new Error('Review not found');\n    }\n    \n    const updatedReview: Review = {\n      ...review,\n      adminReply,\n      adminReplyAt: new Date()\n    };\n    \n    this.reviews.set(reviewId, updatedReview);\n    return updatedReview;\n  }\n\n  async getDownloadStats(): Promise<DownloadStats[]> {\n    return Array.from(this.downloadStats.values());\n  }\n\n  async updateDownloadStats(platform: string): Promise<DownloadStats> {\n    const existing = this.downloadStats.get(platform);\n    if (existing) {\n      existing.downloadCount += 1;\n      existing.lastUpdated = new Date();\n      this.downloadStats.set(platform, existing);\n      return existing;\n    } else {\n      const stats: DownloadStats = {\n        id: randomUUID(),\n        platform,\n        downloadCount: 1,\n        lastUpdated: new Date()\n      };\n      this.downloadStats.set(platform, stats);\n      return stats;\n    }\n  }\n\n  async initializeDownloadStats(): Promise<void> {\n    const platforms = ['iPhone', 'Android', 'PC'];\n    for (const platform of platforms) {\n      if (!this.downloadStats.has(platform)) {\n        this.downloadStats.set(platform, {\n          id: randomUUID(),\n          platform,\n          downloadCount: 0, // Set to zero as requested\n          lastUpdated: new Date()\n        });\n      }\n    }\n\n    // Reviews start empty - no demo data\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":4315},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp, integer, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const newsletterSignups = pgTable(\"newsletter_signups\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: text(\"email\").notNull().unique(),\n  subscribedAt: timestamp(\"subscribed_at\").defaultNow().notNull(),\n});\n\nexport const reviews = pgTable(\"reviews\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userName: text(\"user_name\").notNull(),\n  rating: integer(\"rating\").notNull(),\n  reviewText: text(\"review_text\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  verified: boolean(\"verified\").default(false).notNull(),\n  adminReply: text(\"admin_reply\"),\n  adminReplyAt: timestamp(\"admin_reply_at\"),\n});\n\nexport const downloadStats = pgTable(\"download_stats\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  platform: varchar(\"platform\", { length: 50 }).notNull(),\n  downloadCount: integer(\"download_count\").default(0).notNull(),\n  lastUpdated: timestamp(\"last_updated\").defaultNow().notNull(),\n});\n\nexport const appFiles = pgTable(\"app_files\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  platform: varchar(\"platform\", { length: 50 }).notNull(),\n  fileName: text(\"file_name\").notNull(),\n  filePath: text(\"file_path\").notNull(),\n  version: text(\"version\").notNull(),\n  uploadedAt: timestamp(\"uploaded_at\").defaultNow().notNull(),\n  isActive: boolean(\"is_active\").default(true).notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertNewsletterSchema = createInsertSchema(newsletterSignups).pick({\n  email: true,\n});\n\nexport const insertReviewSchema = createInsertSchema(reviews).pick({\n  userName: true,\n  rating: true,\n  reviewText: true,\n  verified: true,\n});\n\nexport const adminReplySchema = z.object({\n  reviewId: z.string(),\n  adminReply: z.string().min(1, \"Reply cannot be empty\"),\n});\n\nexport const insertDownloadStatsSchema = createInsertSchema(downloadStats).pick({\n  platform: true,\n  downloadCount: true,\n});\n\nexport const insertAppFileSchema = createInsertSchema(appFiles).pick({\n  platform: true,\n  fileName: true,\n  filePath: true,\n  version: true,\n  isActive: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertNewsletter = z.infer<typeof insertNewsletterSchema>;\nexport type NewsletterSignup = typeof newsletterSignups.$inferSelect;\nexport type InsertReview = z.infer<typeof insertReviewSchema>;\nexport type Review = typeof reviews.$inferSelect;\nexport type AdminReply = z.infer<typeof adminReplySchema>;\nexport type InsertDownloadStats = z.infer<typeof insertDownloadStatsSchema>;\nexport type DownloadStats = typeof downloadStats.$inferSelect;\nexport type InsertAppFile = z.infer<typeof insertAppFileSchema>;\nexport type AppFile = typeof appFiles.$inferSelect;\n","size_bytes":3275},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Home from \"@/pages/home\";\nimport Reviews from \"@/pages/reviews\";\nimport SubmitReview from \"@/pages/submit-review\";\nimport AdminPanel from \"@/pages/admin-panel\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/reviews\" component={Reviews} />\n      <Route path=\"/submit-review\" component={SubmitReview} />\n      <Route path=\"/admin\" component={AdminPanel} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1002},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: #f6cbcd;\n  --foreground: hsl(339, 52%, 25%);\n  --muted: hsl(352, 30%, 95%);\n  --muted-foreground: hsl(339, 20%, 40%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(339, 52%, 25%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(339, 52%, 25%);\n  --border: hsl(339, 30%, 85%);\n  --input: hsl(339, 30%, 85%);\n  --primary: hsl(342, 69%, 66%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(352, 30%, 95%);\n  --secondary-foreground: hsl(339, 52%, 25%);\n  --accent: hsl(352, 30%, 95%);\n  --accent-foreground: hsl(339, 52%, 25%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(60, 9.1%, 97.8%);\n  --ring: hsl(339, 52%, 25%);\n  --radius: 0.5rem;\n  \n  /* Custom Mum's Space colors */\n  --mums-pink: #f6cbcd;\n  --mums-dark: hsl(339, 52%, 25%);\n  --mums-accent: hsl(342, 69%, 66%);\n  --mums-light: hsl(352, 80%, 97%);\n}\n\n.dark {\n  --background: hsl(240, 10%, 3.9%);\n  --foreground: hsl(0, 0%, 98%);\n  --muted: hsl(240, 3.7%, 15.9%);\n  --muted-foreground: hsl(240, 5%, 64.9%);\n  --popover: hsl(240, 10%, 3.9%);\n  --popover-foreground: hsl(0, 0%, 98%);\n  --card: hsl(240, 10%, 3.9%);\n  --card-foreground: hsl(0, 0%, 98%);\n  --border: hsl(240, 3.7%, 15.9%);\n  --input: hsl(240, 3.7%, 15.9%);\n  --primary: hsl(342, 69%, 66%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(240, 3.7%, 15.9%);\n  --secondary-foreground: hsl(0, 0%, 98%);\n  --accent: hsl(240, 3.7%, 15.9%);\n  --accent-foreground: hsl(0, 0%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --ring: hsl(240, 4.9%, 83.9%);\n  --radius: 0.5rem;\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-bodoni antialiased text-foreground;\n    background-color: #f6cbcd;\n    min-height: 100vh;\n  }\n  \n  /* Apply Bodoni Moda font and justified text to all text elements */\n  h1, h2, h3, h4, h5, h6, p, div, span, li, a, button, label, input, textarea {\n    font-family: 'Bodoni Moda', serif;\n  }\n  \n  /* Text justification for all paragraphs and content text */\n  p, .text-content, .text-justify-content {\n    text-align: justify;\n    text-justify: inter-word;\n    hyphens: auto;\n  }\n  \n  /* Ensure specific content areas use justified text */\n  .section-content p,\n  .card-content p,\n  .description-text {\n    text-align: justify;\n    text-justify: inter-word;\n    hyphens: auto;\n  }\n}\n\n@layer utilities {\n  .font-bodoni {\n    font-family: 'Bodoni Moda', serif;\n  }\n  \n  .text-mums-dark {\n    color: var(--mums-dark);\n  }\n  \n  .text-mums-accent {\n    color: var(--mums-accent);\n  }\n  \n  .bg-mums-pink {\n    background-color: #f6cbcd;\n  }\n  \n  .bg-mums-accent {\n    background-color: var(--mums-accent);\n  }\n  \n  .bg-mums-dark {\n    background-color: var(--mums-dark);\n  }\n  \n  .bg-mums-light {\n    background-color: var(--mums-light);\n  }\n  \n  .border-mums-accent {\n    border-color: var(--mums-accent);\n  }\n  \n  .section-card {\n    background: rgba(255, 255, 255, 0.65);\n    backdrop-filter: blur(10px);\n  }\n  \n  .hearts-bg {\n    background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><text y=\"50\" font-size=\"30\" opacity=\"0.14\" fill=\"%23ec719e\">❤️</text></svg>');\n    background-size: 80px 80px;\n    pointer-events: none;\n  }\n}\n","size_bytes":3344},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"public/downloads/README.md":{"content":"# App Downloads Folder\n\nThis folder contains the actual app files that users can download from your website.\n\n## How to Add Your App Files\n\n1. **Place your app files in this folder:**\n   - `mums-space-android.apk` - Android app file\n   - `mums-space-ios.ipa` - iPhone app file  \n   - `mums-space-pc.exe` - PC/Windows app file\n\n2. **File naming convention:**\n   - Use lowercase, hyphens for spaces\n   - Include platform in filename\n   - Keep names consistent with download handler\n\n3. **Security:**\n   - Only you should upload files here\n   - Never create public upload forms\n   - Use FTP, file manager, or GitHub to add files\n\n## Current Files\n- No app files uploaded yet\n- Add your built app files here when ready\n\n## File Size Limits\n- Most hosting providers limit file uploads\n- Consider using cloud storage for very large files\n- Typical limits: 25MB-100MB per file\n\n## When You Deploy\n- Upload files via your hosting provider's file manager\n- Or commit files to your GitHub repository\n- Update file paths in the download handler if needed","size_bytes":1043},"client/src/components/AdminAuth.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Lock, Eye, EyeOff } from \"lucide-react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nconst passwordSchema = z.object({\n  password: z.string().min(12, \"Password must be at least 12 characters\"),\n});\n\ntype PasswordData = z.infer<typeof passwordSchema>;\n\ninterface AdminAuthProps {\n  children: React.ReactNode;\n  requiredPassword?: string;\n}\n\nconst AdminAuth: React.FC<AdminAuthProps> = ({ \n  children, \n  requiredPassword = \"MumsSpace2024!\" // Default 12-character password\n}) => {\n  const { toast } = useToast();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [attempts, setAttempts] = useState(0);\n  const [isLocked, setIsLocked] = useState(false);\n\n  const form = useForm<PasswordData>({\n    resolver: zodResolver(passwordSchema),\n    defaultValues: {\n      password: \"\",\n    },\n  });\n\n  // Check if already authenticated (stored in sessionStorage)\n  useEffect(() => {\n    const authStatus = sessionStorage.getItem('admin_authenticated');\n    if (authStatus === 'true') {\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  // Lock after 3 failed attempts for 5 minutes\n  useEffect(() => {\n    if (attempts >= 3) {\n      setIsLocked(true);\n      toast({\n        title: \"Too many failed attempts\",\n        description: \"Access locked for 5 minutes\",\n        variant: \"destructive\",\n      });\n      \n      const lockTimeout = setTimeout(() => {\n        setIsLocked(false);\n        setAttempts(0);\n      }, 5 * 60 * 1000); // 5 minutes\n\n      return () => clearTimeout(lockTimeout);\n    }\n  }, [attempts, toast]);\n\n  const onSubmit = (data: PasswordData) => {\n    if (isLocked) {\n      toast({\n        title: \"Access locked\",\n        description: \"Please wait before trying again\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (data.password === requiredPassword) {\n      setIsAuthenticated(true);\n      sessionStorage.setItem('admin_authenticated', 'true');\n      toast({\n        title: \"Access granted\",\n        description: \"Welcome to admin area\",\n      });\n      form.reset();\n    } else {\n      setAttempts(prev => prev + 1);\n      toast({\n        title: \"Invalid password\",\n        description: `${3 - attempts - 1} attempts remaining`,\n        variant: \"destructive\",\n      });\n      form.reset();\n    }\n  };\n\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    sessionStorage.removeItem('admin_authenticated');\n    toast({\n      title: \"Logged out\",\n      description: \"Admin session ended\",\n    });\n  };\n\n  if (isAuthenticated) {\n    return (\n      <div>\n        <div className=\"fixed top-4 right-4 z-50 flex gap-2\">\n          <Button\n            onClick={() => window.location.href = '/'}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"bg-blue-500 hover:bg-blue-600 text-white border-blue-500\"\n          >\n            View Website\n          </Button>\n          <Button\n            onClick={handleLogout}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"bg-red-500 hover:bg-red-600 text-white border-red-500\"\n          >\n            <Lock className=\"w-4 h-4 mr-2\" />\n            Logout\n          </Button>\n        </div>\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-mums-pink flex items-center justify-center p-4\">\n      <Card className=\"w-full max-w-md p-8\">\n        <div className=\"text-center mb-8\">\n          <div className=\"w-16 h-16 mx-auto mb-4 bg-mums-accent rounded-full flex items-center justify-center\">\n            <Lock className=\"w-8 h-8 text-white\" />\n          </div>\n          <h2 className=\"text-2xl font-bold text-mums-dark mb-2\">Admin Access</h2>\n          <p className=\"text-gray-600\">Enter password to continue</p>\n        </div>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <FormField\n              control={form.control}\n              name=\"password\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Password</FormLabel>\n                  <FormControl>\n                    <div className=\"relative\">\n                      <Input\n                        type={showPassword ? \"text\" : \"password\"}\n                        placeholder=\"Enter 12-character password\"\n                        disabled={isLocked}\n                        className=\"bg-white pr-10\"\n                        {...field}\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => setShowPassword(!showPassword)}\n                        className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700\"\n                        disabled={isLocked}\n                      >\n                        {showPassword ? <EyeOff className=\"w-4 h-4\" /> : <Eye className=\"w-4 h-4\" />}\n                      </button>\n                    </div>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <Button\n              type=\"submit\"\n              disabled={isLocked}\n              className=\"w-full bg-mums-accent hover:bg-mums-dark text-white\"\n            >\n              {isLocked ? \"Access Locked\" : \"Access Admin Area\"}\n            </Button>\n\n            {attempts > 0 && !isLocked && (\n              <p className=\"text-sm text-red-600 text-center\">\n                {3 - attempts} attempts remaining\n              </p>\n            )}\n\n            {isLocked && (\n              <p className=\"text-sm text-red-600 text-center\">\n                Access locked for 5 minutes due to failed attempts\n              </p>\n            )}\n          </form>\n        </Form>\n\n        <div className=\"mt-8 p-4 bg-gray-50 rounded-lg\">\n          <h3 className=\"text-sm font-semibold text-gray-700 mb-2\">Security Features:</h3>\n          <ul className=\"text-xs text-gray-600 space-y-1\">\n            <li>• 12-character minimum password</li>\n            <li>• Session-based authentication</li>\n            <li>• Automatic lockout after 3 failed attempts</li>\n            <li>• 5-minute lockout duration</li>\n          </ul>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default AdminAuth;","size_bytes":6734},"client/src/components/AdminReplyForm.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Send, X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Form, FormControl, FormField, FormItem, FormMessage } from \"@/components/ui/form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\n\nconst replySchema = z.object({\n  adminReply: z.string().min(1, \"Reply cannot be empty\").max(500, \"Reply too long\"),\n});\n\ntype ReplyData = z.infer<typeof replySchema>;\n\ninterface AdminReplyFormProps {\n  reviewId: string;\n  onCancel: () => void;\n  existingReply?: string | null;\n}\n\nconst AdminReplyForm: React.FC<AdminReplyFormProps> = ({ reviewId, onCancel, existingReply }) => {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const form = useForm<ReplyData>({\n    resolver: zodResolver(replySchema),\n    defaultValues: {\n      adminReply: existingReply || \"\",\n    },\n  });\n\n  const replyMutation = useMutation({\n    mutationFn: async (data: ReplyData) => {\n      const response = await fetch('/api/reviews/reply', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          reviewId,\n          adminReply: data.adminReply,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save reply');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/reviews'] });\n      toast({\n        title: \"Reply saved\",\n        description: \"Your reply has been posted successfully.\",\n      });\n      onCancel();\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Failed to save reply\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: ReplyData) => {\n    replyMutation.mutate(data);\n  };\n\n  return (\n    <div className=\"mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n      <div className=\"flex items-center justify-between mb-3\">\n        <h4 className=\"font-semibold text-blue-900\">\n          {existingReply ? \"Edit Admin Reply\" : \"Reply as Admin\"}\n        </h4>\n        <Button\n          onClick={onCancel}\n          variant=\"ghost\"\n          size=\"sm\"\n          className=\"text-gray-500 hover:text-gray-700\"\n        >\n          <X className=\"w-4 h-4\" />\n        </Button>\n      </div>\n\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n          <FormField\n            control={form.control}\n            name=\"adminReply\"\n            render={({ field }) => (\n              <FormItem>\n                <FormControl>\n                  <Textarea\n                    placeholder=\"Write your reply to this review...\"\n                    className=\"bg-white resize-none\"\n                    rows={3}\n                    {...field}\n                  />\n                </FormControl>\n                <FormMessage />\n                <div className=\"text-xs text-gray-500 text-right\">\n                  {field.value?.length || 0}/500 characters\n                </div>\n              </FormItem>\n            )}\n          />\n\n          <div className=\"flex gap-2 justify-end\">\n            <Button\n              type=\"button\"\n              onClick={onCancel}\n              variant=\"outline\"\n              size=\"sm\"\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              disabled={replyMutation.isPending}\n              size=\"sm\"\n              className=\"bg-blue-600 hover:bg-blue-700 text-white\"\n            >\n              {replyMutation.isPending ? (\n                \"Saving...\"\n              ) : (\n                <>\n                  <Send className=\"w-4 h-4 mr-2\" />\n                  {existingReply ? \"Update Reply\" : \"Post Reply\"}\n                </>\n              )}\n            </Button>\n          </div>\n        </form>\n      </Form>\n    </div>\n  );\n};\n\nexport default AdminReplyForm;","size_bytes":4175},"client/src/components/Footer.tsx":{"content":"import NewsletterSignup from \"./NewsletterSignup\";\n\nconst Footer = () => {\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <footer className=\"bg-white bg-opacity-90 backdrop-blur-md py-12 mt-16\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Newsletter Signup Section */}\n        <div className=\"mb-12 p-8 bg-mums-primary bg-opacity-10 rounded-2xl\">\n          <h3 className=\"text-2xl font-semibold text-center mb-4 text-mums-dark\">Get Notified About Mum's Space Updates</h3>\n          <p className=\"text-center text-gray-700 mb-6 max-w-2xl mx-auto\">\n            Enter your email below to get notified when we launch new features or have exciting news. We'll keep you in the loop—no spam, ever.\n          </p>\n          <NewsletterSignup />\n          <p className=\"text-center text-sm text-gray-600 mt-4\">\n            You can unsubscribe at any time. For urgent help, please contact your local support line.\n          </p>\n        </div>\n\n        <div className=\"text-center\">\n          <div className=\"flex justify-center mb-6\">\n            <img \n              src=\"/logo.png\" \n              alt=\"Mum's Space Logo\" \n              className=\"h-16 w-auto filter drop-shadow-sm\"\n            />\n          </div>\n          \n          <div className=\"flex flex-wrap justify-center gap-6 mb-6\">\n            {['home', 'download', 'about', 'library', 'reviews', 'policies'].map((section) => (\n              section === 'reviews' ? (\n                <a\n                  key={section}\n                  href=\"/reviews\"\n                  className=\"text-mums-dark hover:text-mums-accent transition-colors capitalize\"\n                >\n                  Reviews\n                </a>\n              ) : (\n                <button\n                  key={section}\n                  onClick={() => scrollToSection(section)}\n                  className=\"text-mums-dark hover:text-mums-accent transition-colors capitalize\"\n                >\n                  {section === 'library' ? 'eBook Library' : section}\n                </button>\n              )\n            ))}\n          </div>\n          \n          <p className=\"text-sm text-gray-600 mb-4\">\n            A safe, supportive community for mothers and women worldwide.\n          </p>\n          \n          <p className=\"text-xs text-gray-500\">\n            © 2024 Mum's Space. All rights reserved. | Made with ❤️ for mums everywhere.\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","size_bytes":2651},"client/src/components/HeartBackground.tsx":{"content":"const HeartBackground = () => {\n  return (\n    <div className=\"absolute inset-0 flex justify-center items-center -z-10\">\n      <div className=\"flex space-x-3 opacity-14\">\n        <span className=\"text-6xl text-mums-accent\">❤️</span>\n        <span className=\"text-5xl text-mums-accent transform -translate-y-2\">💗</span>\n        <span className=\"text-6xl text-mums-accent\">💖</span>\n      </div>\n    </div>\n  );\n};\n\nexport default HeartBackground;\n","size_bytes":455},"client/src/components/Navigation.tsx":{"content":"import { useState } from \"react\";\nimport { Menu, X } from \"lucide-react\";\nimport { Link, useLocation } from \"wouter\";\n\nconst Navigation = () => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [location] = useLocation();\n\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n      setIsMenuOpen(false);\n    }\n  };\n\n  const handleNavClick = (item: typeof navItems[0]) => {\n    if (item.isPage) {\n      setIsMenuOpen(false);\n    } else {\n      if (location !== '/') {\n        // If not on home page, go to home page first\n        window.location.href = `/#${item.id}`;\n      } else {\n        scrollToSection(item.id);\n      }\n    }\n  };\n\n  const navItems = [\n    { id: 'home', label: 'Home' },\n    { id: 'download', label: 'Download' },\n    { id: 'about', label: 'About' },\n    { id: 'library', label: 'Explore mums space' },\n    { id: 'reviews', label: 'Reviews', isPage: true },\n    { id: 'policies', label: 'Policies' },\n  ];\n\n  return (\n    <nav className=\"sticky top-0 z-50 bg-white bg-opacity-80 backdrop-blur-md border-b border-mums-accent border-opacity-20\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between h-16\">\n          <div className=\"flex items-center\">\n            <img \n              src=\"/logo.png\" \n              alt=\"Mum's Space Logo\" \n              className=\"h-12 w-auto filter drop-shadow-sm\"\n            />\n          </div>\n          \n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {navItems.map((item) => (\n              item.isPage ? (\n                <Link key={item.id} href={`/${item.id}`}>\n                  <button className=\"px-3 py-2 rounded-md text-sm font-medium text-mums-dark hover:bg-white hover:bg-opacity-30 transition-colors\">\n                    {item.label}\n                  </button>\n                </Link>\n              ) : (\n                <button\n                  key={item.id}\n                  onClick={() => handleNavClick(item)}\n                  className=\"px-3 py-2 rounded-md text-sm font-medium text-mums-dark hover:bg-white hover:bg-opacity-30 transition-colors\"\n                >\n                  {item.label}\n                </button>\n              )\n            ))}\n          </div>\n          \n          {/* Mobile menu button */}\n          <div className=\"md:hidden flex items-center\">\n            <button\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n              className=\"p-2 rounded-md text-mums-dark hover:bg-white hover:bg-opacity-30\"\n            >\n              {isMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Mobile menu */}\n      {isMenuOpen && (\n        <div className=\"md:hidden bg-white bg-opacity-90 backdrop-blur-md\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1\">\n            {navItems.map((item) => (\n              item.isPage ? (\n                <Link key={item.id} href={`/${item.id}`}>\n                  <button \n                    onClick={() => setIsMenuOpen(false)}\n                    className=\"block w-full text-left px-3 py-2 rounded-md text-base font-medium text-mums-dark hover:bg-white hover:bg-opacity-30\"\n                  >\n                    {item.label}\n                  </button>\n                </Link>\n              ) : (\n                <button\n                  key={item.id}\n                  onClick={() => handleNavClick(item)}\n                  className=\"block w-full text-left px-3 py-2 rounded-md text-base font-medium text-mums-dark hover:bg-white hover:bg-opacity-30\"\n                >\n                  {item.label}\n                </button>\n              )\n            ))}\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","size_bytes":3974},"client/src/components/NewsletterSignup.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Mail } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Form, FormControl, FormField, FormItem, FormMessage } from \"@/components/ui/form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useMutation } from \"@tanstack/react-query\";\n\nconst newsletterSchema = z.object({\n  email: z.string().email(\"Please enter a valid email address\"),\n});\n\ntype NewsletterData = z.infer<typeof newsletterSchema>;\n\nconst NewsletterSignup = () => {\n  const { toast } = useToast();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const form = useForm<NewsletterData>({\n    resolver: zodResolver(newsletterSchema),\n    defaultValues: {\n      email: \"\",\n    },\n  });\n\n  const signupMutation = useMutation({\n    mutationFn: async (data: NewsletterData) => {\n      const response = await fetch('/api/newsletter/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to subscribe');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      setIsSubmitted(true);\n      toast({\n        title: \"Successfully subscribed!\",\n        description: \"You'll receive updates about Mum's Space features and news.\",\n      });\n      form.reset();\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Subscription failed\",\n        description: error.message === \"Email already subscribed\" \n          ? \"This email is already subscribed to our newsletter.\"\n          : \"Please try again later.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: NewsletterData) => {\n    signupMutation.mutate(data);\n  };\n\n  if (isSubmitted) {\n    return (\n      <div className=\"text-center p-6 bg-green-50 border border-green-200 rounded-2xl\">\n        <div className=\"w-16 h-16 mx-auto mb-4 bg-green-100 rounded-full flex items-center justify-center\">\n          <Mail className=\"w-8 h-8 text-green-600\" />\n        </div>\n        <h3 className=\"text-lg font-semibold text-green-800 mb-2\">Thank you for subscribing!</h3>\n        <p className=\"text-green-700\">We'll keep you updated with the latest Mum's Space news.</p>\n      </div>\n    );\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"max-w-md mx-auto\">\n        <div className=\"flex gap-3\">\n          <FormField\n            control={form.control}\n            name=\"email\"\n            render={({ field }) => (\n              <FormItem className=\"flex-1\">\n                <FormControl>\n                  <Input \n                    type=\"email\"\n                    placeholder=\"Enter your email address\"\n                    className=\"bg-white bg-opacity-70 border-mums-accent border-opacity-30 text-center\"\n                    {...field} \n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <Button \n            type=\"submit\" \n            disabled={signupMutation.isPending}\n            className=\"bg-mums-accent hover:bg-mums-dark text-white font-semibold px-8 py-2 rounded-xl transition-colors duration-300 whitespace-nowrap\"\n          >\n            {signupMutation.isPending ? \"Subscribing...\" : \"Subscribe\"}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  );\n};\n\nexport default NewsletterSignup;","size_bytes":3701},"client/src/components/ReviewCard.tsx":{"content":"import { useState } from \"react\";\nimport { Star, MessageSquare, Edit3 } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport AdminReplyForm from \"@/components/AdminReplyForm\";\nimport type { Review } from \"@shared/schema\";\n\ninterface ReviewCardProps {\n  review: Review;\n  isAdmin?: boolean;\n}\n\nconst ReviewCard: React.FC<ReviewCardProps> = ({ review, isAdmin = false }) => {\n  const [showReplyForm, setShowReplyForm] = useState(false);\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg border\">\n      {/* Review Content */}\n      <div className=\"flex justify-between items-start mb-4\">\n        <div className=\"flex-1\">\n          <div className=\"flex items-center gap-3 mb-3\">\n            <span className=\"font-semibold text-gray-900\">{review.userName}</span>\n            <div className=\"flex\">\n              {Array.from({ length: review.rating }).map((_, i) => (\n                <Star key={i} className=\"w-4 h-4 fill-yellow-400 text-yellow-400\" />\n              ))}\n            </div>\n            {review.verified && (\n              <span className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full\">\n                ✓ Verified User\n              </span>\n            )}\n          </div>\n          <p className=\"text-gray-700 leading-relaxed\">{review.reviewText}</p>\n        </div>\n        <span className=\"text-xs text-gray-500 ml-4\">\n          {new Date(review.createdAt).toLocaleDateString()}\n        </span>\n      </div>\n\n      {/* Admin Reply Section */}\n      {review.adminReply && (\n        <div className=\"mt-4 p-4 bg-blue-50 border-l-4 border-blue-200 rounded\">\n          <div className=\"flex items-center gap-2 mb-2\">\n            <MessageSquare className=\"w-4 h-4 text-blue-600\" />\n            <span className=\"text-sm font-semibold text-blue-900\">Admin Reply</span>\n            <span className=\"text-xs text-blue-600\">\n              {review.adminReplyAt && new Date(review.adminReplyAt).toLocaleDateString()}\n            </span>\n          </div>\n          <p className=\"text-blue-800 text-sm leading-relaxed\">{review.adminReply}</p>\n          \n          {isAdmin && (\n            <div className=\"mt-3 pt-3 border-t border-blue-200\">\n              <Button\n                onClick={() => setShowReplyForm(true)}\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"text-blue-600 hover:text-blue-800 hover:bg-blue-100\"\n              >\n                <Edit3 className=\"w-4 h-4 mr-2\" />\n                Edit Reply\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Admin Controls */}\n      {isAdmin && !review.adminReply && !showReplyForm && (\n        <div className=\"mt-4 pt-4 border-t border-gray-200\">\n          <Button\n            onClick={() => setShowReplyForm(true)}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"text-blue-600 border-blue-200 hover:bg-blue-50\"\n          >\n            <MessageSquare className=\"w-4 h-4 mr-2\" />\n            Reply as Admin\n          </Button>\n        </div>\n      )}\n\n      {/* Reply Form */}\n      {showReplyForm && isAdmin && (\n        <AdminReplyForm\n          reviewId={review.id}\n          existingReply={review.adminReply}\n          onCancel={() => setShowReplyForm(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ReviewCard;","size_bytes":3333},"client/src/components/ReviewForm.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Star, CheckCircle } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\n\nconst reviewSchema = z.object({\n  userName: z.string().min(2, \"Name must be at least 2 characters\"),\n  rating: z.number().min(1, \"Please select a rating\").max(5),\n  reviewText: z.string().min(10, \"Review must be at least 10 characters\"),\n});\n\ntype ReviewData = z.infer<typeof reviewSchema>;\n\nconst ReviewForm = () => {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [rating, setRating] = useState(0);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const form = useForm<ReviewData>({\n    resolver: zodResolver(reviewSchema),\n    defaultValues: {\n      userName: \"\",\n      rating: 0,\n      reviewText: \"\",\n    },\n  });\n\n  // Get username from URL parameters when component loads\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const userNameFromUrl = urlParams.get('userName');\n    const ratingFromUrl = urlParams.get('rating');\n    \n    if (userNameFromUrl) {\n      form.setValue('userName', decodeURIComponent(userNameFromUrl));\n    }\n    \n    if (ratingFromUrl) {\n      const ratingValue = parseInt(ratingFromUrl, 10);\n      if (ratingValue >= 1 && ratingValue <= 5) {\n        setRating(ratingValue);\n        form.setValue('rating', ratingValue);\n      }\n    }\n  }, [form]);\n\n  const submitReviewMutation = useMutation({\n    mutationFn: async (data: ReviewData) => {\n      const response = await fetch('/api/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...data,\n          verified: true // Mark as verified since it's coming from the app\n        }),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to submit review');\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      setIsSubmitted(true);\n      queryClient.invalidateQueries({ queryKey: ['/api/reviews'] });\n      toast({\n        title: \"Review submitted successfully!\",\n        description: \"Thank you for sharing your experience with Mum's Space.\",\n      });\n      form.reset();\n      setRating(0);\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Failed to submit review\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: ReviewData) => {\n    submitReviewMutation.mutate({\n      ...data,\n      rating: rating,\n    });\n  };\n\n  const renderStars = (interactive = false) => {\n    return Array.from({ length: 5 }, (_, i) => (\n      <Star\n        key={i}\n        className={`w-8 h-8 cursor-pointer transition-colors ${\n          i < rating ? 'fill-yellow-400 text-yellow-400' : 'text-gray-300 hover:text-yellow-300'\n        }`}\n        onClick={interactive ? () => {\n          setRating(i + 1);\n          form.setValue('rating', i + 1);\n        } : undefined}\n      />\n    ));\n  };\n\n  if (isSubmitted) {\n    return (\n      <div className=\"text-center py-12\">\n        <div className=\"w-20 h-20 mx-auto mb-6 bg-green-100 rounded-full flex items-center justify-center\">\n          <CheckCircle className=\"w-10 h-10 text-green-600\" />\n        </div>\n        <h3 className=\"text-2xl font-semibold text-green-800 mb-4\">Thank You!</h3>\n        <p className=\"text-green-700 mb-6\">\n          Your review has been submitted and will appear on the reviews page shortly.\n        </p>\n        <Button\n          onClick={() => {\n            setIsSubmitted(false);\n            window.location.reload();\n          }}\n          className=\"bg-mums-accent hover:bg-mums-dark text-white\"\n        >\n          Write Another Review\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"userName\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Your Name</FormLabel>\n              <FormControl>\n                <Input \n                  placeholder=\"Your app username will appear here automatically\"\n                  className=\"bg-white bg-opacity-70 border-mums-accent border-opacity-30\"\n                  readOnly={!!field.value}\n                  {...field} \n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"rating\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Your Rating</FormLabel>\n              <FormControl>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"flex\">\n                    {renderStars(true)}\n                  </div>\n                  <span className=\"text-sm text-gray-600 ml-2\">\n                    {rating > 0 ? `${rating} star${rating > 1 ? 's' : ''}` : 'Click to rate'}\n                  </span>\n                </div>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"reviewText\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Your Review</FormLabel>\n              <FormControl>\n                <Textarea \n                  placeholder=\"Share your experience with Mum's Space. What did you like most? How has it helped you?\"\n                  className=\"bg-white bg-opacity-70 border-mums-accent border-opacity-30\"\n                  rows={5}\n                  {...field} \n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"text-center\">\n          <Button \n            type=\"submit\" \n            disabled={submitReviewMutation.isPending || rating === 0}\n            className=\"bg-mums-accent hover:bg-mums-dark text-white font-semibold py-3 px-8 rounded-xl\"\n          >\n            {submitReviewMutation.isPending ? \"Submitting...\" : \"Submit Review\"}\n          </Button>\n        </div>\n\n        <div className=\"text-center text-sm text-gray-600\">\n          <p>\n            Your review will be marked as verified and will help other mothers discover our community.\n          </p>\n        </div>\n      </form>\n    </Form>\n  );\n};\n\nexport default ReviewForm;","size_bytes":6972},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/admin-panel.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport {\n  BarChart3,\n  Users,\n  Star,\n  Download,\n  Upload,\n  Settings,\n} from \"lucide-react\";\nimport Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport AdminAuth from \"@/components/AdminAuth\";\nimport ReviewCard from \"@/components/ReviewCard\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport type { Review, DownloadStats } from \"@shared/schema\";\n\nconst AdminPanel = () => {\n  const [activeTab, setActiveTab] = useState(\"overview\");\n\n  const { data: reviews } = useQuery<Review[]>({\n    queryKey: [\"/api/reviews\"],\n  });\n\n  const { data: downloadStats } = useQuery<DownloadStats[]>({\n    queryKey: [\"/api/download-stats\"],\n  });\n\n  const totalDownloads =\n    downloadStats?.reduce((sum, stat) => sum + stat.downloadCount, 0) || 0;\n  const averageRating = reviews?.length\n    ? (\n        reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length\n      ).toFixed(1)\n    : 0;\n\n  const AdminContent = () => (\n    <div className=\"min-h-screen bg-mums-pink\">\n      <Navigation />\n\n      <section className=\"py-16\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl font-bold text-mums-dark mb-6\">\n              Admin Dashboard\n            </h1>\n            <p className=\"text-xl text-gray-700\">\n              Manage your Mum's Space website and monitor app statistics\n            </p>\n            <div className=\"mt-4 p-4 bg-green-100 border border-green-200 rounded-lg max-w-2xl mx-auto\">\n              <p className=\"text-sm text-green-800\">\n                <strong>✓ Secure Access:</strong> Only you can see this admin\n                area. Regular website visitors cannot access this page without\n                the password.\n              </p>\n            </div>\n          </div>\n\n          {/* Stats Overview */}\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"grid md:grid-cols-3 gap-8 mb-12\">\n              <Card className=\"section-card p-8 text-center shadow-lg\">\n                <div className=\"w-20 h-20 mx-auto mb-6 bg-mums-accent rounded-full flex items-center justify-center\">\n                  <Download className=\"w-10 h-10 text-white\" />\n                </div>\n                <h3 className=\"text-4xl font-bold text-mums-dark mb-3 text-center\">\n                  {totalDownloads.toLocaleString()}\n                </h3>\n                <p className=\"text-gray-600 font-medium text-center\">Total Downloads</p>\n              </Card>\n\n              <Card className=\"section-card p-8 text-center shadow-lg\">\n                <div className=\"w-20 h-20 mx-auto mb-6 bg-mums-accent rounded-full flex items-center justify-center\">\n                  <Star className=\"w-10 h-10 text-white\" />\n                </div>\n                <h3 className=\"text-4xl font-bold text-mums-dark mb-3 text-center\">\n                  {averageRating}\n                </h3>\n                <div className=\"flex justify-center mb-3\">\n                  {/* Note: renderStars function not available in admin-panel, would need to import or create */}\n                  <div className=\"flex\">\n                    {[1, 2, 3, 4, 5].map((star) => (\n                      <Star\n                        key={star}\n                        className={`w-5 h-5 ${\n                          star <= Math.round(Number(averageRating))\n                            ? 'fill-yellow-400 text-yellow-400'\n                            : 'text-gray-300'\n                        }`}\n                      />\n                    ))}\n                  </div>\n                </div>\n                <p className=\"text-gray-600 font-medium text-center\">Average Rating</p>\n              </Card>\n\n              <Card className=\"section-card p-8 text-center shadow-lg\">\n                <div className=\"w-20 h-20 mx-auto mb-6 bg-mums-accent rounded-full flex items-center justify-center\">\n                  <Users className=\"w-10 h-10 text-white\" />\n                </div>\n                <h3 className=\"text-4xl font-bold text-mums-dark mb-3 text-center\">\n                  {reviews?.length || 0}\n                </h3>\n                <p className=\"text-gray-600 font-medium text-center\">Total Reviews</p>\n              </Card>\n            </div>\n          </div>\n\n          {/* Management Section */}\n          <Card className=\"section-card p-8 mb-8\">\n            <h2 className=\"text-2xl font-semibold text-mums-dark mb-6\">\n              App File Management\n            </h2>\n\n            <div className=\"bg-blue-50 border border-blue-200 p-6 rounded-2xl mb-6\">\n              <h3 className=\"text-lg font-semibold text-blue-900 mb-4\">\n                How to Upload Your App Files\n              </h3>\n              <div className=\"space-y-3 text-sm text-blue-800\">\n                <div>\n                  <strong>Step 1: Prepare your files</strong>\n                  <ul className=\"list-disc list-inside mt-2 space-y-1 ml-4\">\n                    <li>\n                      Name your Android app:{\" \"}\n                      <code className=\"bg-blue-100 px-1 rounded\">\n                        mums-space-android.apk\n                      </code>\n                    </li>\n                    <li>\n                      Name your iPhone app:{\" \"}\n                      <code className=\"bg-blue-100 px-1 rounded\">\n                        mums-space-ios.ipa\n                      </code>\n                    </li>\n                    <li>\n                      Name your PC app:{\" \"}\n                      <code className=\"bg-blue-100 px-1 rounded\">\n                        mums-space-pc.exe\n                      </code>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"mt-4\">\n                  <strong>Step 2: Upload via your hosting provider</strong>\n                  <ul className=\"list-disc list-inside mt-2 space-y-1 ml-4\">\n                    <li>\n                      Use FTP/SFTP to upload to{\" \"}\n                      <code className=\"bg-blue-100 px-1 rounded\">\n                        /public/downloads/\n                      </code>{\" \"}\n                      folder\n                    </li>\n                    <li>Or use your hosting provider's file manager</li>\n                    <li>Or commit files to your GitHub repository</li>\n                  </ul>\n                </div>\n                <div className=\"mt-4\">\n                  <strong>\n                    Step 3: Files will automatically be available for download\n                  </strong>\n                  <p className=\"text-blue-700 mt-2\">\n                    Once uploaded, the download buttons on your website will\n                    serve the actual app files.\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div className=\"bg-gray-50 p-6 rounded-lg\">\n                <h4 className=\"font-semibold text-gray-800 mb-3\">\n                  Current Download Status\n                </h4>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Android APK:</span>\n                    <span className=\"text-orange-600\">File needed</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>iPhone IPA:</span>\n                    <span className=\"text-orange-600\">File needed</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>PC EXE:</span>\n                    <span className=\"text-orange-600\">File needed</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-gray-50 p-6 rounded-lg\">\n                <h4 className=\"font-semibold text-gray-800 mb-3\">Security</h4>\n                <div className=\"space-y-2 text-sm text-gray-600\">\n                  <p>✓ Password protected admin area</p>\n                  <p>✓ No public upload forms</p>\n                  <p>✓ Secure file management</p>\n                  <p>✓ Session-based authentication</p>\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          {/* Recent Reviews */}\n          <Card className=\"section-card p-8\">\n            <h2 className=\"text-2xl font-semibold text-mums-dark mb-6\">\n              Reviews Management\n            </h2>\n            <div className=\"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n              <p className=\"text-sm text-blue-800\">\n                <strong>Admin Features:</strong> You can reply to reviews below. Your replies will be visible to all website visitors on the reviews page.\n              </p>\n            </div>\n\n            {reviews && reviews.length > 0 ? (\n              <div className=\"space-y-6\">\n                {reviews.slice(0, 10).map((review) => (\n                  <ReviewCard key={review.id} review={review} isAdmin={true} />\n                ))}\n\n                {reviews.length > 10 && (\n                  <div className=\"text-center pt-4\">\n                    <p className=\"text-gray-600 mb-4\">\n                      Showing first 10 reviews. Total: {reviews.length} reviews.\n                    </p>\n                    <Button\n                      variant=\"outline\"\n                      onClick={() => (window.location.href = \"/reviews\")}\n                    >\n                      View All Reviews on Public Page\n                    </Button>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <p className=\"text-gray-600 text-center py-8\">\n                No reviews yet. Reviews will appear here when users submit them\n                through the app.\n              </p>\n            )}\n          </Card>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n\n  return (\n    <AdminAuth requiredPassword=\"isaiah_elias_1964_1991_aimy\">\n      <AdminContent />\n    </AdminAuth>\n  );\n};\n\nexport default AdminPanel;\n","size_bytes":10205},"client/src/pages/home.tsx":{"content":"import { Smartphone, Monitor, Download, Heart, Users, Lock, CheckCircle, BookOpen, Clock, Mail, Star, Crown, Facebook } from \"lucide-react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport HeartBackground from \"@/components/HeartBackground\";\nimport storiesImage from \"@assets/stories-updated.png\";\nimport debatesImage from \"@assets/debates-new.png\";\nimport guidesImage from \"@assets/Screenshot_14_1755234349059.png\";\nimport mealPlannerImage from \"@assets/Screenshot_21_1755234508674.png\";\nimport contractionTrackerImage from \"@assets/Screenshot_18_1755234564029.png\";\nimport feedingTrackerImage from \"@assets/Screenshot_20_1755234646909.png\";\nimport mumsToBeImage from \"@assets/mums-to-be-final.png\";\nimport stage01Image from \"@assets/zero-one-new.png\";\nimport stage25Image from \"@assets/two-five-updated.png\";\nimport reviewsImage from \"@assets/Screenshot_36_1755235233351.png\";\nimport downloadImage from \"@assets/Screenshot_37_1755235284470.png\";\nimport babyIsHereImage from \"@assets/Screenshot_38_1755235350831.png\";\nimport communityMothersImage from \"@assets/community-mothers.png\";\nimport foundersImage from \"@assets/Screenshot_33_1755718284955.png\";\n\nimport NewsletterSignup from \"@/components/NewsletterSignup\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { DownloadStats } from \"@shared/schema\";\n\nconst Home = () => {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: downloadStats } = useQuery<DownloadStats[]>({\n    queryKey: ['/api/download-stats'],\n  });\n\n  const downloadMutation = useMutation({\n    mutationFn: async (platform: string) => {\n      const response = await fetch(`/api/download/${platform}`, {\n        method: 'POST',\n      });\n      if (!response.ok) throw new Error('Download failed');\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/download-stats'] });\n    },\n  });\n\n  const totalDownloads = downloadStats?.reduce((sum, stat) => sum + stat.downloadCount, 0) || 0;\n\n  const handleDownload = async (platform: string) => {\n    // Show message that app is not ready yet and direct to newsletter\n    toast({\n      title: \"App Not Ready Yet\",\n      description: \"Our app is still in development. Join our newsletter to be notified when it launches!\",\n      variant: \"default\",\n    });\n    \n    // Scroll to newsletter section\n    setTimeout(() => {\n      document.getElementById('newsletter')?.scrollIntoView({ behavior: 'smooth' });\n    }, 1000);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-mums-pink\">\n      <Navigation />\n      \n      {/* Home Section */}\n      <section id=\"home\" className=\"py-12 md:py-20\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {/* Logo Section with Hearts */}\n          <div className=\"text-center mb-12\">\n            <div className=\"relative inline-block\">\n              <HeartBackground />\n              <div className=\"w-64 md:w-80 h-auto mx-auto relative z-10\">\n                <img \n                  src=\"/logo.png\" \n                  alt=\"Mum's Space Logo - Mother and baby in heart shape\" \n                  className=\"w-full h-auto filter drop-shadow-lg\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Main Content Card */}\n          <Card className=\"section-card rounded-3xl p-8 md:p-12 text-center shadow-xl max-w-2xl mx-auto\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-6 text-mums-dark\">Welcome to Mum's Space</h2>\n            <p className=\"text-lg md:text-xl mb-8 leading-relaxed\">The private support space for mums and women—by mums, for mums. Connect, share, and find your community in a safe, supportive environment.</p>\n            \n            <Button \n              onClick={() => document.getElementById('app-features')?.scrollIntoView({ behavior: 'smooth' })}\n              className=\"bg-mums-accent hover:bg-mums-dark text-white font-semibold py-4 px-8 rounded-full text-lg transition-colors duration-300 shadow-lg hover:shadow-xl transform hover:scale-105\"\n              data-testid=\"button-explore-features\"\n              aria-label=\"Explore Mum's Space app features\"\n            >\n              Explore What's Inside\n            </Button>\n            \n            <div className=\"mt-8 p-4 bg-mums-light bg-opacity-50 rounded-2xl\">\n              <p className=\"text-sm md:text-base text-mums-dark font-medium\">\n                <strong>Important:</strong> Mum's Space is a women-only community. By joining, you affirm you are a woman/mum and agree to our community guidelines.\n              </p>\n            </div>\n          </Card>\n        </div>\n      </section>\n\n      {/* App Features Section - Chatroom Showcase */}\n      <section id=\"app-features\" className=\"py-16\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card className=\"section-card rounded-3xl p-8 md:p-12 shadow-xl\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-center mb-12 text-mums-dark\">What We Offer: Real Chatrooms for Every Mum</h2>\n            \n            <div className=\"grid lg:grid-cols-2 gap-12 items-center mb-12\">\n              {/* Chatroom Screenshot */}\n              <div className=\"order-2 lg:order-1\">\n                <img \n                  src=\"/chatroom-screenshot.png\" \n                  alt=\"Mum's Space Chatroom Interface showing active conversations\" \n                  className=\"w-full h-auto rounded-2xl shadow-lg border border-mums-accent border-opacity-20\"\n                  onError={(e) => {\n                    console.error('Chatroom image failed to load:', e);\n                    e.currentTarget.style.border = '2px solid red';\n                  }}\n                  onLoad={() => console.log('Chatroom image loaded successfully')}\n                />\n              </div>\n              \n              {/* Description */}\n              <div className=\"order-1 lg:order-2\">\n                <p className=\"text-lg mb-8 leading-relaxed text-gray-700\">\n                  At Mum's Space, you'll find dedicated chatrooms for every stage of your journey:\n                </p>\n                \n                <div className=\"space-y-6\">\n                  <div className=\"flex items-start space-x-4\">\n                    <div className=\"w-12 h-12 bg-mums-accent rounded-xl flex items-center justify-center flex-shrink-0\">\n                      <Heart className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-mums-dark mb-2\">Mums to Be</h4>\n                      <p className=\"text-gray-600 text-sm\">Connect with other expecting mums, ask questions, and share your excitement (and worries!) in a private space.</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start space-x-4\">\n                    <div className=\"w-12 h-12 bg-mums-accent rounded-xl flex items-center justify-center flex-shrink-0\">\n                      <Users className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-mums-dark mb-2\">0–1 Years</h4>\n                      <p className=\"text-gray-600 text-sm\">Get instant support from mums going through sleepless nights, teething, and those amazing first milestones.</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start space-x-4\">\n                    <div className=\"w-12 h-12 bg-mums-accent rounded-xl flex items-center justify-center flex-shrink-0\">\n                      <CheckCircle className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-mums-dark mb-2\">2–5 Years</h4>\n                      <p className=\"text-gray-600 text-sm\">Share tips, triumphs, and challenges with other mums of toddlers and preschoolers.</p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"mt-8 p-4 bg-mums-light bg-opacity-50 rounded-xl\">\n                  <p className=\"text-sm font-medium text-mums-dark\">\n                    No matter your child's age or your parenting journey, there's a chatroom just for you.\n                  </p>\n                </div>\n              </div>\n            </div>\n            \n            {/* What Makes It Special */}\n            <div className=\"mt-16\">\n              <h3 className=\"text-2xl md:text-3xl font-bold text-center mb-12 text-mums-dark\">What Makes Mum's Space Chatroom Special?</h3>\n              \n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                <div className=\"text-center p-6 bg-white bg-opacity-50 rounded-2xl\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-mums-accent rounded-full flex items-center justify-center\">\n                    <Lock className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <h4 className=\"text-lg font-semibold mb-3 text-mums-dark\">Private & Safe</h4>\n                  <p className=\"text-sm text-gray-600\">Only mums and women can join—no outsiders, no judgment.</p>\n                </div>\n                \n                <div className=\"text-center p-6 bg-white bg-opacity-50 rounded-2xl\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-mums-accent rounded-full flex items-center justify-center\">\n                    <Smartphone className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <h4 className=\"text-lg font-semibold mb-3 text-mums-dark\">Easy to Use</h4>\n                  <p className=\"text-sm text-gray-600\">Clean, inviting design with big, soft buttons and welcoming colors.</p>\n                </div>\n                \n                <div className=\"text-center p-6 bg-white bg-opacity-50 rounded-2xl\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-mums-accent rounded-full flex items-center justify-center\">\n                    <Users className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <h4 className=\"text-lg font-semibold mb-3 text-mums-dark\">Real Community</h4>\n                  <p className=\"text-sm text-gray-600\">Every chatroom is filled with mums just like you—ready to listen, help, and celebrate.</p>\n                </div>\n                \n                <div className=\"text-center p-6 bg-white bg-opacity-50 rounded-2xl\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-mums-accent rounded-full flex items-center justify-center\">\n                    <Heart className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <h4 className=\"text-lg font-semibold mb-3 text-mums-dark\">Group Support</h4>\n                  <p className=\"text-sm text-gray-600\">Create your own group for more focused conversations (playgroups, single mums, special needs, and more).</p>\n                </div>\n                \n                <div className=\"text-center p-6 bg-white bg-opacity-50 rounded-2xl\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-mums-accent rounded-full flex items-center justify-center\">\n                    <CheckCircle className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <h4 className=\"text-lg font-semibold mb-3 text-mums-dark\">Fun & Expressive</h4>\n                  <p className=\"text-sm text-gray-600\">Emojis and nicknames keep things light and personal.</p>\n                </div>\n                \n                <div className=\"text-center p-6 bg-white bg-opacity-50 rounded-2xl\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-yellow-500 rounded-full flex items-center justify-center\">\n                    <Crown className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <h4 className=\"text-lg font-semibold mb-3 text-mums-dark\">Exclusive Founders Chat</h4>\n                  <p className=\"text-sm text-gray-600\">Access a private chatroom reserved only for our founding members—connect with the first 100 mothers who believed in us.</p>\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </section>\n\n      {/* About Section */}\n      <section id=\"about\" className=\"py-16\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card className=\"section-card rounded-3xl p-8 md:p-12 shadow-xl\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-center mb-12 text-mums-dark\">About Mum's Space</h2>\n            \n            {/* Our Story Section */}\n            <div className=\"text-center mb-12\">\n              <h3 className=\"text-2xl font-semibold mb-6 text-mums-accent\">🌸 Our Story</h3>\n              <div className=\"max-w-3xl mx-auto space-y-4\">\n                <p className=\"leading-relaxed\">Mum's Space was born from the recognition that while motherhood is one of life's greatest joys, it can also be one of its loneliest journeys. Too often, mothers find themselves navigating sleepless nights, endless questions, and emotional challenges in silence. We wanted to change that.</p>\n                \n                <p className=\"leading-relaxed\">Mum's Space is more than just an app — it's a sanctuary built by mothers, for mothers. A place where women from all walks of life can share their stories openly, without judgment. Whether it's celebrating milestones, seeking advice during difficult times, or simply finding someone who truly understands, Mum's Space was created to remind every mother that she is never alone.</p>\n              </div>\n            </div>\n\n            {/* Two Images Side by Side */}\n            <div className=\"grid md:grid-cols-2 gap-8 mb-12\">\n              <div>\n                <img \n                  src={communityMothersImage}\n                  alt=\"Diverse group of mothers and baby in supportive community\" \n                  className=\"rounded-2xl shadow-lg w-full h-80 object-cover\"\n                />\n              </div>\n              <div>\n                <img \n                  src=\"/about-image.png\" \n                  alt=\"Mother and baby sharing a tender moment\" \n                  className=\"rounded-2xl shadow-lg w-full h-80 object-cover\"\n                />\n              </div>\n            </div>\n\n            {/* Our Mission Section */}\n            <div className=\"text-center\">\n              <h3 className=\"text-2xl font-semibold mb-6 text-mums-accent\">💜 Our Mission</h3>\n              <div className=\"max-w-3xl mx-auto\">\n                <p className=\"mb-4 leading-relaxed\">Our mission is simple but powerful: to create a safe, inclusive, and supportive digital space where mothers and women feel seen, heard, and connected.</p>\n                \n                <p className=\"mb-4 leading-relaxed\">We believe that motherhood should never be a solitary experience. At Mum's Space, women can:</p>\n                \n                <ul className=\"mb-6 space-y-2 text-gray-700 text-left inline-block\">\n                  <li className=\"flex items-start\">\n                    <span className=\"text-mums-accent mr-2\">•</span>\n                    Connect authentically with others who share their experiences.\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-mums-accent mr-2\">•</span>\n                    Share wisdom gained through the ups and downs of parenting.\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-mums-accent mr-2\">•</span>\n                    Seek guidance and reassurance in moments of uncertainty.\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-mums-accent mr-2\">•</span>\n                    Celebrate the journey — from the small daily victories to the life-changing milestones.\n                  </li>\n                </ul>\n                \n                <p className=\"leading-relaxed\">At its heart, Mum's Space is about building a community where women uplift each other, foster lasting friendships, and find strength in shared stories. Together, we are rewriting the narrative of motherhood — from isolation to connection, from doubt to confidence, from silence to support.</p>\n              </div>\n            </div>\n\n            {/* Values */}\n            <div className=\"mt-12 grid md:grid-cols-3 gap-8\">\n              <div className=\"text-center p-6 bg-white bg-opacity-50 rounded-2xl\">\n                <div className=\"w-16 h-16 mx-auto mb-4 bg-mums-accent rounded-full flex items-center justify-center\">\n                  <Users className=\"w-8 h-8 text-white\" />\n                </div>\n                <h4 className=\"text-lg font-semibold mb-2\">Support</h4>\n                <p className=\"text-sm text-gray-600\">We believe in lifting each other up through every challenge and celebration.</p>\n              </div>\n              <div className=\"text-center p-6 bg-white bg-opacity-50 rounded-2xl\">\n                <div className=\"w-16 h-16 mx-auto mb-4 bg-mums-accent rounded-full flex items-center justify-center\">\n                  <Lock className=\"w-8 h-8 text-white\" />\n                </div>\n                <h4 className=\"text-lg font-semibold mb-2\">Privacy</h4>\n                <p className=\"text-sm text-gray-600\">Your conversations and personal information are always protected and secure.</p>\n              </div>\n              <div className=\"text-center p-6 bg-white bg-opacity-50 rounded-2xl\">\n                <div className=\"w-16 h-16 mx-auto mb-4 bg-mums-accent rounded-full flex items-center justify-center\">\n                  <Heart className=\"w-8 h-8 text-white\" />\n                </div>\n                <h4 className=\"text-lg font-semibold mb-2\">Community</h4>\n                <p className=\"text-sm text-gray-600\">Building genuine connections that last beyond the digital space.</p>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </section>\n\n      {/* Download Section */}\n      <section id=\"download\" className=\"py-16\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card className=\"section-card rounded-3xl p-8 md:p-12 shadow-xl\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-center mb-8 text-mums-dark\">Download Mum's Space</h2>\n            \n            {/* Download Counter */}\n            <div className=\"text-center mb-12\">\n              <div className=\"inline-flex items-center gap-2 bg-mums-primary bg-opacity-20 px-6 py-3 rounded-full\">\n                <Users className=\"w-5 h-5 text-mums-accent\" />\n                <span className=\"text-lg font-semibold text-mums-dark\">\n                  {totalDownloads.toLocaleString()} women have already joined!\n                </span>\n              </div>\n            </div>\n\n            <div className=\"text-center mb-12\">\n              <p className=\"text-lg text-gray-700 max-w-2xl mx-auto leading-relaxed\">\n                Get Mum's Space on your preferred device and join our supportive community of mothers. \n                Available for iPhone, Android, and PC - start connecting today!\n              </p>\n            </div>\n\n            {/* Download Buttons */}\n            <div className=\"grid md:grid-cols-3 gap-6 max-w-2xl mx-auto\">\n              <Button\n                onClick={() => handleDownload('iPhone')}\n                disabled={downloadMutation.isPending}\n                className=\"flex flex-col items-center gap-3 h-auto py-6 px-4 bg-white hover:bg-gray-50 text-gray-800 border-2 border-gray-200 hover:border-mums-accent transition-all duration-300\"\n                data-testid=\"button-download-iphone\"\n                aria-label=\"Download Mum's Space for iPhone\"\n              >\n                <Smartphone className=\"w-8 h-8\" aria-hidden=\"true\" />\n                <div>\n                  <div className=\"font-semibold\">iPhone</div>\n                  <div className=\"text-sm opacity-75\">iOS App</div>\n                </div>\n              </Button>\n\n              <Button\n                onClick={() => handleDownload('Android')}\n                disabled={downloadMutation.isPending}\n                className=\"flex flex-col items-center gap-3 h-auto py-6 px-4 bg-white hover:bg-gray-50 text-gray-800 border-2 border-gray-200 hover:border-mums-accent transition-all duration-300\"\n                data-testid=\"button-download-android\"\n                aria-label=\"Download Mum's Space for Android\"\n              >\n                <Smartphone className=\"w-8 h-8\" aria-hidden=\"true\" />\n                <div>\n                  <div className=\"font-semibold\">Android</div>\n                  <div className=\"text-sm opacity-75\">APK Download</div>\n                </div>\n              </Button>\n\n              <Button\n                onClick={() => handleDownload('PC')}\n                disabled={downloadMutation.isPending}\n                className=\"flex flex-col items-center gap-3 h-auto py-6 px-4 bg-white hover:bg-gray-50 text-gray-800 border-2 border-gray-200 hover:border-mums-accent transition-all duration-300\"\n                data-testid=\"button-download-pc\"\n                aria-label=\"Download Mum's Space for PC and Mac\"\n              >\n                <Monitor className=\"w-8 h-8\" aria-hidden=\"true\" />\n                <div>\n                  <div className=\"font-semibold\">PC/Mac</div>\n                  <div className=\"text-sm opacity-75\">Desktop App</div>\n                </div>\n              </Button>\n            </div>\n\n            <div className=\"mt-8 text-center\">\n              <p className=\"text-sm text-gray-600\">\n                All versions are free to download. Join our growing community of supportive mothers!\n              </p>\n            </div>\n\n            {/* Important Notice */}\n            <div className=\"mt-12 p-8 bg-mums-accent bg-opacity-10 rounded-2xl border-2 border-mums-accent border-opacity-20\">\n              <div className=\"text-center\">\n                <div className=\"flex justify-center mb-4\">\n                  <div className=\"w-12 h-12 bg-mums-accent rounded-full flex items-center justify-center\">\n                    <Clock className=\"w-6 h-6 text-white\" />\n                  </div>\n                </div>\n                \n                <h3 className=\"text-xl font-semibold mb-4 text-mums-dark\">Important: Our App Isn't Ready Yet!</h3>\n                \n                <div className=\"max-w-2xl mx-auto space-y-3 mb-6\">\n                  <p className=\"text-gray-700 leading-relaxed\">\n                    We're putting the finishing touches on Mum's Space to ensure it's the perfect supportive community you deserve. \n                    We're building a thriving community of mothers first, so when the app launches, it will be completely ready and filled with engaged, supportive women.\n                  </p>\n                </div>\n                \n                <div className=\"flex justify-center mb-6\">\n                  <div className=\"flex items-center gap-3 bg-white bg-opacity-80 px-6 py-3 rounded-full\">\n                    <Mail className=\"w-5 h-5 text-mums-accent\" />\n                    <span className=\"font-medium text-mums-dark\">Get notified when we launch!</span>\n                  </div>\n                </div>\n                \n                <Button \n                  onClick={() => document.getElementById('newsletter')?.scrollIntoView({ behavior: 'smooth' })}\n                  className=\"bg-mums-accent hover:bg-mums-dark text-white font-semibold py-3 px-6 rounded-full transition-colors duration-300\"\n                >\n                  Join Our Newsletter\n                </Button>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </section>\n\n      {/* Founders Section */}\n      <section id=\"founders\" className=\"py-16\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card className=\"section-card rounded-3xl p-8 md:p-12 shadow-xl\">\n            <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n              {/* Founders Screenshot */}\n              <div className=\"order-2 lg:order-1\">\n                <img \n                  src={foundersImage} \n                  alt=\"Mum's Space Founders Club interface showing Wall of Founders with 100 available spots\" \n                  className=\"w-full h-auto rounded-2xl shadow-lg border border-mums-accent border-opacity-20\"\n                />\n              </div>\n              \n              {/* Founders Description */}\n              <div className=\"order-1 lg:order-2\">\n                <div className=\"flex items-center gap-3 mb-6\">\n                  <div className=\"w-12 h-12 bg-yellow-500 rounded-full flex items-center justify-center\">\n                    <Crown className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <h2 className=\"text-3xl md:text-4xl font-bold text-mums-dark\">Founders Club</h2>\n                </div>\n                \n                <div className=\"space-y-4 mb-8\">\n                  <p className=\"text-lg text-gray-700 leading-relaxed\">\n                    <strong>We're opening just 100 Founder spots</strong>—snag yours for a one-time <strong>$59.99 AUD</strong> and lock in lifetime membership.\n                  </p>\n                  \n                  <p className=\"text-lg text-gray-700 leading-relaxed\">\n                    As a Founder, you'll be recognised forever, get exclusive access to a private Founders-only chatroom, and never pay again—no subscriptions, no renewals, all future features included.\n                  </p>\n                  \n                  <div className=\"p-4 bg-yellow-50 border-l-4 border-yellow-500 rounded-r-lg\">\n                    <p className=\"text-gray-800 font-medium\">\n                      <strong>⏰ This is a once-only launch offer:</strong> when the 100 are gone, they're gone.\n                    </p>\n                  </div>\n                </div>\n\n                {/* Founders Benefits */}\n                <div className=\"space-y-4 mb-8\">\n                  <h3 className=\"text-xl font-semibold text-mums-dark\">Founder Benefits:</h3>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-start space-x-3\">\n                      <Star className=\"w-5 h-5 text-yellow-500 mt-0.5 flex-shrink-0\" />\n                      <p className=\"text-gray-700\">Lifetime access to Mum's Space - no future payments ever</p>\n                    </div>\n                    <div className=\"flex items-start space-x-3\">\n                      <Star className=\"w-5 h-5 text-yellow-500 mt-0.5 flex-shrink-0\" />\n                      <p className=\"text-gray-700\">Gold Founder badge on your profile</p>\n                    </div>\n                    <div className=\"flex items-start space-x-3\">\n                      <Star className=\"w-5 h-5 text-yellow-500 mt-0.5 flex-shrink-0\" />\n                      <p className=\"text-gray-700\">Private Founders-only chatroom</p>\n                    </div>\n                    <div className=\"flex items-start space-x-3\">\n                      <Star className=\"w-5 h-5 text-yellow-500 mt-0.5 flex-shrink-0\" />\n                      <p className=\"text-gray-700\">Direct influence through Founder feedback</p>\n                    </div>\n                    <div className=\"flex items-start space-x-3\">\n                      <Star className=\"w-5 h-5 text-yellow-500 mt-0.5 flex-shrink-0\" />\n                      <p className=\"text-gray-700\">Early access to all future features</p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-mums-light bg-opacity-50 rounded-xl p-6\">\n                  <p className=\"text-center text-mums-dark font-medium mb-4\">\n                    Join the exclusive group of mothers who believed in us from day one\n                  </p>\n                  <Button \n                    onClick={() => document.getElementById('newsletter')?.scrollIntoView({ behavior: 'smooth' })}\n                    className=\"w-full bg-yellow-500 hover:bg-yellow-600 text-white font-semibold py-3 px-6 rounded-full transition-colors duration-300 shadow-lg\"\n                  >\n                    Join Newsletter for Founders Access\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </section>\n\n      {/* eBook Library Section */}\n      <section id=\"library\" className=\"py-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"bg-white rounded-3xl p-8 md:p-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-center mb-20 text-mums-dark\">Explore Mums Space</h2>\n            \n            {/* Section 1: Stories - Image Right */}\n            <div className=\"grid lg:grid-cols-[440px_1fr] gap-16 items-start mb-20\">\n              <div className=\"max-w-[480px]\">\n                <h3 className=\"text-xl font-semibold mb-3 text-mums-dark leading-tight\">Stories</h3>\n                <p className=\"text-gray-600 text-base leading-relaxed mb-4\">Real experiences from mums at every stage.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed mb-3\">Share your journey, struggles, and victories with a supportive community. From pregnancy symptoms to parenting challenges, connect with mothers who understand exactly what you're going through.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed\">Browse stories by topic, share your own experiences, and find comfort in knowing you're not alone in your motherhood journey.</p>\n              </div>\n              <div className=\"w-full max-w-[560px] lg:ml-auto\">\n                <img \n                  src={storiesImage} \n                  alt=\"Mums sharing pregnancy and parenting stories in community discussions\" \n                  loading=\"lazy\"\n                  className=\"w-full h-auto rounded-3xl shadow-lg aspect-video\"\n                />\n              </div>\n            </div>\n\n            {/* Section 2: Debates - Image Left */}\n            <div className=\"grid lg:grid-cols-[1fr_440px] gap-16 items-start mb-20\">\n              <div className=\"w-full max-w-[560px] order-2 lg:order-1\">\n                <img \n                  src={debatesImage} \n                  alt=\"Community debates with voting interface and discussion threads\" \n                  loading=\"lazy\"\n                  className=\"w-full h-auto rounded-3xl shadow-lg aspect-video\"\n                />\n              </div>\n              <div className=\"max-w-[480px] order-1 lg:order-2 lg:ml-auto\">\n                <h3 className=\"text-xl font-semibold mb-3 text-mums-dark leading-tight\">Debates</h3>\n                <p className=\"text-gray-600 text-base leading-relaxed mb-4\">Vote, comment, and see what the community thinks.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed mb-3\">Engage in thoughtful discussions about parenting choices, from sleep training methods to feeding decisions. Share your perspective and learn from diverse experiences.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed\">Vote on topics that matter to you and discover what other mums in similar situations have chosen to do.</p>\n              </div>\n            </div>\n\n            {/* Section 3: Chatroom - Image Right */}\n            <div className=\"grid lg:grid-cols-[440px_1fr] gap-16 items-start mb-20\">\n              <div className=\"max-w-[480px]\">\n                <h3 className=\"text-xl font-semibold mb-3 text-mums-dark leading-tight\">Chatroom</h3>\n                <p className=\"text-gray-600 text-base leading-relaxed mb-4\">Drop in for live, friendly conversation.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed mb-3\">Connect instantly with other mums online right now. Get quick advice, share a laugh, or just chat about your day with women who understand.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed\">Whether you need immediate support or want to offer encouragement to others, our chatroom is always buzzing with friendly conversation.</p>\n              </div>\n              <div className=\"w-full max-w-[560px] lg:ml-auto\">\n                <img \n                  src=\"/chatroom-screenshot.png\" \n                  alt=\"Live chatroom with ongoing conversations between mums\" \n                  loading=\"lazy\"\n                  className=\"w-full h-auto rounded-3xl shadow-lg aspect-video\"\n                />\n              </div>\n            </div>\n\n            {/* Section 4: Guides (eBooks) - Image Left */}\n            <div className=\"grid lg:grid-cols-[1fr_440px] gap-16 items-start mb-20\">\n              <div className=\"w-full max-w-[560px] order-2 lg:order-1\">\n                <img \n                  src={guidesImage} \n                  alt=\"Digital library of expert parenting guides and eBooks\" \n                  loading=\"lazy\"\n                  className=\"w-full h-auto rounded-3xl shadow-lg aspect-video\"\n                />\n              </div>\n              <div className=\"max-w-[480px] order-1 lg:order-2 lg:ml-auto\">\n                <h3 className=\"text-xl font-semibold mb-3 text-mums-dark leading-tight\">Guides (eBooks)</h3>\n                <p className=\"text-gray-600 text-base leading-relaxed mb-4\">A marketplace where mums share their knowledge.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed mb-3\">Browse and purchase eBooks written by experienced mothers in our community. From parenting tips to personal growth, discover practical guides created by mums who've been there.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed\">Support fellow mothers by purchasing their expertly crafted guides, or share your own knowledge by selling your eBooks to the community.</p>\n              </div>\n            </div>\n\n            {/* Section 5: Meal Planner - Image Right */}\n            <div className=\"grid lg:grid-cols-[440px_1fr] gap-16 items-start mb-20\">\n              <div className=\"max-w-[480px]\">\n                <h3 className=\"text-xl font-semibold mb-3 text-mums-dark leading-tight\">Meal Planner</h3>\n                <p className=\"text-gray-600 text-base leading-relaxed mb-4\">Plan weekly meals and auto-build a shopping list.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed mb-3\">Take the stress out of meal planning with our smart planner. Add meals for breakfast, lunch, dinner, and snacks, then generate an organized shopping list automatically.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed\">Save your favorite meal combinations and never wonder \"what's for dinner?\" again. Perfect for busy mums juggling family nutrition.</p>\n              </div>\n              <div className=\"w-full max-w-[560px] lg:ml-auto\">\n                <img \n                  src={mealPlannerImage} \n                  alt=\"Weekly meal planner with auto-generated shopping lists\" \n                  loading=\"lazy\"\n                  className=\"w-full h-auto rounded-3xl shadow-lg aspect-video\"\n                />\n              </div>\n            </div>\n\n            {/* Section 6: Baby is Here - Image Left */}\n            <div className=\"grid lg:grid-cols-[1fr_440px] gap-16 items-start mb-20\">\n              <div className=\"w-full max-w-[560px] order-2 lg:order-1\">\n                <img \n                  src={babyIsHereImage} \n                  alt=\"Baby milestone celebration with birth announcement and community support\" \n                  loading=\"lazy\"\n                  className=\"w-full h-auto rounded-3xl shadow-lg aspect-video\"\n                />\n              </div>\n              <div className=\"max-w-[480px] order-1 lg:order-2 lg:ml-auto\">\n                <h3 className=\"text-xl font-semibold mb-3 text-mums-dark leading-tight\">Baby is Here</h3>\n                <p className=\"text-gray-600 text-base leading-relaxed mb-4\">Celebrate milestones and find support in the newborn stage.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed mb-3\">Share your beautiful birth story and celebrate this incredible milestone with the community. Document labor details, share photos, and receive loving support from other mums.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed\">Connect with other new mothers, share your recovery journey, and find encouragement during those early precious weeks with your newborn.</p>\n              </div>\n            </div>\n\n            {/* Section 7: Contraction Tracker - Image Right */}\n            <div className=\"grid lg:grid-cols-[440px_1fr] gap-16 items-start mb-20\">\n              <div className=\"max-w-[480px]\">\n                <h3 className=\"text-xl font-semibold mb-3 text-mums-dark leading-tight\">Contraction Tracker</h3>\n                <p className=\"text-gray-600 text-base leading-relaxed mb-4\">Track timings and intervals in real time.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed mb-3\">Monitor your contractions with precision during labor. Simply tap to start and stop timing, and our tracker automatically calculates duration and intervals.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed\">See your contraction patterns clearly with detailed history and summaries to help you know when it's time to head to the hospital.</p>\n              </div>\n              <div className=\"w-full max-w-[560px] lg:ml-auto\">\n                <img \n                  src={contractionTrackerImage} \n                  alt=\"Real-time contraction tracking tool with timing intervals\" \n                  loading=\"lazy\"\n                  className=\"w-full h-auto rounded-3xl shadow-lg aspect-video\"\n                />\n              </div>\n            </div>\n\n            {/* Section 8: Feeding Tracker - Image Left */}\n            <div className=\"grid lg:grid-cols-[1fr_440px] gap-16 items-start mb-20\">\n              <div className=\"w-full max-w-[560px] order-2 lg:order-1\">\n                <img \n                  src={feedingTrackerImage} \n                  alt=\"Baby feeding tracker for breast, bottle and solid food logging\" \n                  loading=\"lazy\"\n                  className=\"w-full h-auto rounded-3xl shadow-lg aspect-video\"\n                />\n              </div>\n              <div className=\"max-w-[480px] order-1 lg:order-2 lg:ml-auto\">\n                <h3 className=\"text-xl font-semibold mb-3 text-mums-dark leading-tight\">Feeding Tracker</h3>\n                <p className=\"text-gray-600 text-base leading-relaxed mb-4\">Log breast, bottle, and solids with easy history.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed mb-3\">Keep track of your baby's feeding schedule with our comprehensive tracker. Monitor breastfeeding sessions, bottle feeds, and solid food introduction with suggested timing schedules.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed\">View weekly and monthly statistics to understand feeding patterns and ensure your little one is getting proper nutrition.</p>\n              </div>\n            </div>\n\n            {/* Section 9: Mums-to-be - Image Right */}\n            <div className=\"grid lg:grid-cols-[440px_1fr] gap-16 items-start mb-20\">\n              <div className=\"max-w-[480px]\">\n                <h3 className=\"text-xl font-semibold mb-3 text-mums-dark leading-tight\">Mums-to-be</h3>\n                <p className=\"text-gray-600 text-base leading-relaxed mb-4\">Pregnancy topics, tools, and support in one place.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed mb-3\">Navigate your pregnancy journey with confidence using our comprehensive pregnancy toolkit. Track milestones, access specialized content, and connect with other expecting mothers.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed mb-3\">From first trimester symptoms to birth preparation, find everything you need to support a healthy, informed pregnancy experience.</p>\n                <p className=\"text-gray-600 text-xs italic leading-relaxed\">These are just a few of the options available in our app.</p>\n              </div>\n              <div className=\"w-full max-w-[560px] lg:ml-auto\">\n                <img \n                  src={mumsToBeImage} \n                  alt=\"Pregnancy tools, topics and community support for expecting mothers\" \n                  loading=\"lazy\"\n                  className=\"w-full h-auto rounded-3xl shadow-lg aspect-video\"\n                />\n              </div>\n            </div>\n\n            {/* Section 10: 0–1 - Image Left */}\n            <div className=\"grid lg:grid-cols-[1fr_440px] gap-16 items-start mb-20\">\n              <div className=\"w-full max-w-[560px] order-2 lg:order-1\">\n                <img \n                  src={stage01Image} \n                  alt=\"Newborn care guide with sleep, feeding schedules and milestone tracking\" \n                  loading=\"lazy\"\n                  className=\"w-full h-auto rounded-3xl shadow-lg aspect-video\"\n                />\n              </div>\n              <div className=\"max-w-[480px] order-1 lg:order-2 lg:ml-auto\">\n                <h3 className=\"text-xl font-semibold mb-3 text-mums-dark leading-tight\">0–1</h3>\n                <p className=\"text-gray-600 text-base leading-relaxed mb-4\">Newborn to one: sleep, feeding, routines, milestones.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed mb-3\">Navigate the crucial first year with specialized content for newborns to one-year-olds. Access baby recipes, establish routines, and track important developmental milestones.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed mb-3\">Connect with other new mums, share experiences, and get support during this incredible but challenging first year of parenthood.</p>\n                <p className=\"text-gray-600 text-xs italic leading-relaxed\">These are just a few of the options available in our app.</p>\n              </div>\n            </div>\n\n            {/* Section 11: 2–5 - Image Right */}\n            <div className=\"grid lg:grid-cols-[440px_1fr] gap-16 items-start mb-20\">\n              <div className=\"max-w-[480px]\">\n                <h3 className=\"text-xl font-semibold mb-3 text-mums-dark leading-tight\">2–5</h3>\n                <p className=\"text-gray-600 text-base leading-relaxed mb-4\">Toddlers to preschool: behaviour, play, toilet training.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed mb-3\">Support your growing child through the toddler and preschool years. Access specialized tools for behavior management, developmental activities, and important milestones like toilet training.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed mb-3\">Find age-appropriate guidance, connect with other parents of similar-aged children, and navigate this exciting stage of growth and learning together.</p>\n                <p className=\"text-gray-600 text-xs italic leading-relaxed\">These are just a few of the options available in our app.</p>\n              </div>\n              <div className=\"w-full max-w-[560px] lg:ml-auto\">\n                <img \n                  src={stage25Image} \n                  alt=\"Toddler development activities, behavior guidance and preschool preparation\" \n                  loading=\"lazy\"\n                  className=\"w-full h-auto rounded-3xl shadow-lg aspect-video\"\n                />\n              </div>\n            </div>\n\n            {/* Section 12: Reviews - Image Left */}\n            <div className=\"grid lg:grid-cols-[1fr_440px] gap-16 items-start mb-20\">\n              <div className=\"w-full max-w-[560px] order-2 lg:order-1\">\n                <img \n                  src={reviewsImage} \n                  alt=\"Honest reviews and testimonials from mums using the app\" \n                  loading=\"lazy\"\n                  className=\"w-full h-auto rounded-3xl shadow-lg aspect-video\"\n                />\n              </div>\n              <div className=\"max-w-[480px] order-1 lg:order-2 lg:ml-auto\">\n                <h3 className=\"text-xl font-semibold mb-3 text-mums-dark leading-tight\">Reviews</h3>\n                <p className=\"text-gray-600 text-base leading-relaxed mb-4\">See honest feedback from mums using MumSpace.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed mb-3\">Read authentic testimonials from verified users who share their real experiences with our community and features. From finding supportive friendships to accessing helpful resources.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed\">Discover how Mum's Space has helped other mothers feel less isolated and more confident in their parenting journey.</p>\n              </div>\n            </div>\n\n            {/* Section 13: Download the App - Image Right */}\n            <div className=\"grid lg:grid-cols-[440px_1fr] gap-16 items-start mb-20\">\n              <div className=\"max-w-[480px]\">\n                <h3 className=\"text-xl font-semibold mb-3 text-mums-dark leading-tight\">Download the App</h3>\n                <p className=\"text-gray-600 text-base leading-relaxed mb-4\">Install on iOS or Android for faster access.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed mb-3\">Join over 2,600 women who have already downloaded Mum's Space. Available for iPhone, Android, and PC, so you can stay connected wherever you are.</p>\n                <p className=\"text-gray-600 text-sm leading-relaxed\">Get instant access to our supportive community of mothers and all the tools you need for your parenting journey. Download is completely free.</p>\n              </div>\n              <div className=\"w-full max-w-[560px] lg:ml-auto\">\n                <img \n                  src={downloadImage} \n                  alt=\"Mobile app download screens for iOS and Android platforms\" \n                  loading=\"lazy\"\n                  className=\"w-full h-auto rounded-3xl shadow-lg aspect-video cursor-pointer hover:shadow-xl transition-shadow duration-300\"\n                  onClick={() => document.getElementById('download')?.scrollIntoView({ behavior: 'smooth' })}\n                  data-testid=\"img-download-link\"\n                />\n              </div>\n            </div>\n\n            {/* Section 14: Too many to list - Image Left */}\n            <div className=\"grid md:grid-cols-2 gap-12 items-center mb-16\">\n              <div className=\"order-2 md:order-1\">\n                <h3 className=\"text-2xl font-semibold mb-4 text-mums-dark\">Too many to list</h3>\n                <p className=\"text-gray-700 mb-6\">Open Explore to browse every section and tool.</p>\n              </div>\n\n            </div>\n\n\n\n            {/* Why Mums Space is Special */}\n            <div className=\"bg-mums-primary bg-opacity-20 rounded-2xl p-8 mb-12\">\n              <h3 className=\"text-2xl font-semibold mb-6 text-center text-mums-dark\">Why Mums Space is Special</h3>\n              <div className=\"grid md:grid-cols-3 gap-8\">\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-mums-accent rounded-full flex items-center justify-center\">\n                    <Heart className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <h4 className=\"text-lg font-semibold mb-2\">All-in-One App</h4>\n                  <p className=\"text-sm text-gray-600\">Everything you need as a mum in one simple, beautiful app.</p>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-mums-accent rounded-full flex items-center justify-center\">\n                    <Users className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <h4 className=\"text-lg font-semibold mb-2\">Real Community</h4>\n                  <p className=\"text-sm text-gray-600\">Connect with other mums going through the same experiences.</p>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 bg-mums-accent rounded-full flex items-center justify-center\">\n                    <BookOpen className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <h4 className=\"text-lg font-semibold mb-2\">Expert Guidance</h4>\n                  <p className=\"text-sm text-gray-600\">Trusted guides and tools backed by parenting experts.</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Newsletter Section */}\n      <section id=\"newsletter\" className=\"py-16\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card className=\"section-card rounded-3xl p-8 md:p-12 shadow-xl\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-center mb-8 text-mums-dark\">Get Notified About Mum's Space Updates</h2>\n            \n            <div className=\"text-center max-w-2xl mx-auto\">\n              <p className=\"text-lg text-gray-700 mb-8\">\n                Enter your email below to get notified when we launch new features or have exciting news. We'll keep you in the loop—no spam, ever.\n              </p>\n              \n              <NewsletterSignup />\n              \n              {/* Social Media Section */}\n              <div className=\"mt-8 pt-8 border-t border-gray-200\">\n                <p className=\"text-lg text-gray-700 mb-6\">\n                  Prefer socials? Follow us on Facebook for updates, sneak peeks, and community prompts. \n                  <span className=\"text-mums-dark font-medium\"> (Email gets first dibs on big announcements.)</span>\n                </p>\n                \n                <div className=\"flex justify-center\">\n                  {/* Facebook Button */}\n                  <a\n                    href=\"https://www.facebook.com/profile.php?id=61579660350521\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"flex items-center gap-3 bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-full transition-colors duration-300 shadow-lg\"\n                  >\n                    <Facebook className=\"w-5 h-5\" />\n                    <span className=\"font-medium\">Follow on Facebook</span>\n                  </a>\n                </div>\n              </div>\n              \n              <p className=\"text-sm text-gray-600 mt-6\">\n                You can unsubscribe at any time. For urgent help, please contact your local support line.\n              </p>\n            </div>\n          </Card>\n        </div>\n      </section>\n\n      {/* Policies Section */}\n      <section id=\"policies\" className=\"py-16\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card className=\"section-card rounded-3xl p-8 md:p-12 shadow-xl\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-center mb-12 text-mums-dark\">Policies & Guidelines</h2>\n            \n            <div className=\"space-y-8\">\n              {/* Women-Only Policy */}\n              <div className=\"p-6 bg-mums-light bg-opacity-50 rounded-2xl border-l-4 border-mums-accent\">\n                <h3 className=\"text-xl font-semibold mb-4 flex items-center\">\n                  <Users className=\"mr-3 w-6 h-6\" />\n                  Women-Only Community Policy\n                </h3>\n                <p className=\"mb-4\">Mum's Space is exclusively for women and mothers. This policy ensures:</p>\n                <ul className=\"list-disc list-inside space-y-2 text-gray-700 ml-6\">\n                  <li>A safe space for women to share personal experiences</li>\n                  <li>Gender-specific discussions about motherhood and women's issues</li>\n                  <li>Protection from inappropriate behavior often found in mixed-gender spaces</li>\n                  <li>Authentic conversations without fear of judgment</li>\n                </ul>\n                <p className=\"mt-4 font-medium\">By joining, you agree to maintain the integrity of our women-only space.</p>\n              </div>\n\n              {/* Community Guidelines */}\n              <div>\n                <h3 className=\"text-xl font-semibold mb-4 flex items-center\">\n                  <Heart className=\"mr-3 w-6 h-6\" />\n                  Community Guidelines\n                </h3>\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <div className=\"p-4 bg-white bg-opacity-50 rounded-xl\">\n                    <h4 className=\"font-semibold text-green-700 mb-2\">✓ We Encourage:</h4>\n                    <ul className=\"text-sm space-y-1 text-gray-700\">\n                      <li>• Respectful and supportive communication</li>\n                      <li>• Sharing experiences and advice</li>\n                      <li>• Asking questions without shame</li>\n                      <li>• Celebrating each other's wins</li>\n                      <li>• Offering help when possible</li>\n                    </ul>\n                  </div>\n                  <div className=\"p-4 bg-white bg-opacity-50 rounded-xl\">\n                    <h4 className=\"font-semibold text-red-700 mb-2\">✗ Not Allowed:</h4>\n                    <ul className=\"text-sm space-y-1 text-gray-700\">\n                      <li>• Harassment or bullying</li>\n                      <li>• Spam or promotional content</li>\n                      <li>• Sharing personal information of others</li>\n                      <li>• Discriminatory language</li>\n                      <li>• Medical advice (share experiences only)</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              {/* Privacy Policy */}\n              <div>\n                <h3 className=\"text-xl font-semibold mb-4 flex items-center\">\n                  <Lock className=\"mr-3 w-6 h-6\" />\n                  Privacy & Data Protection\n                </h3>\n                <div className=\"bg-white bg-opacity-50 rounded-xl p-6\">\n                  <div className=\"space-y-6\">\n\n\n                    <div>\n                      <h4 className=\"font-semibold mb-3 text-mums-dark\">What Information We Collect</h4>\n                      <ul className=\"ml-6 space-y-1 text-gray-700\">\n                        <li>We only store your name and username when you register through Google.</li>\n                        <li>No government IDs, photos, or personal documents are collected or stored.</li>\n                        <li>Registration is handled securely through Google's authentication system.</li>\n                      </ul>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold mb-3 text-mums-dark\">Data Protection</h4>\n                      <ul className=\"ml-6 space-y-1 text-gray-700\">\n                        <li>We protect your personal information and never share it with third parties.</li>\n                        <li>Your data is used only to provide community services and communication.</li>\n                        <li>We maintain secure systems to protect your privacy at all times.</li>\n                      </ul>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold mb-3 text-mums-dark\">Your Rights</h4>\n                      <ul className=\"ml-6 space-y-1 text-gray-700\">\n                        <li>You can delete your account at any time through your profile page, or if we haven't implemented that yet, contact us and we can delete it for you.</li>\n                        <li>For assistance, email us at support@mumsspace.com.</li>\n                      </ul>\n                    </div>\n\n                    <div className=\"mt-6 p-4 bg-mums-light bg-opacity-50 rounded-lg border-l-4 border-mums-accent\">\n                      <p className=\"text-sm font-medium text-mums-dark\">\n                        By using Mum's Space, you agree to this privacy policy and our community guidelines.\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Terms of Service */}\n              <div>\n                <h3 className=\"text-xl font-semibold mb-4 flex items-center\">\n                  <CheckCircle className=\"mr-3 w-6 h-6\" />\n                  Terms of Service\n                </h3>\n                <div className=\"bg-white bg-opacity-50 rounded-xl p-6 text-sm space-y-4\">\n                  <p><strong>Account Responsibility:</strong> You are responsible for maintaining your account security and the content you post.</p>\n                  <p><strong>Content Ownership:</strong> You retain rights to your content, but grant us license to display it within the app.</p>\n                  <p><strong>Acceptable Use:</strong> Use the platform respectfully and in accordance with our community guidelines.</p>\n                  <p><strong>Termination:</strong> We reserve the right to suspend accounts that violate our terms or community guidelines.</p>\n                  <p><strong>Changes:</strong> We may update these terms with notice to users.</p>\n                </div>\n              </div>\n            </div>\n\n\n          </Card>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n","size_bytes":57554},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/reviews.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Star, CheckCircle, Users, MessageSquare } from \"lucide-react\";\nimport Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport HeartBackground from \"@/components/HeartBackground\";\nimport ReviewCard from \"@/components/ReviewCard\";\nimport { Card } from \"@/components/ui/card\";\nimport type { Review, DownloadStats } from \"@shared/schema\";\n\nconst Reviews = () => {\n  const { data: reviews, isLoading: reviewsLoading } = useQuery<Review[]>({\n    queryKey: ['/api/reviews'],\n  });\n\n  const { data: downloadStats, isLoading: statsLoading } = useQuery<DownloadStats[]>({\n    queryKey: ['/api/download-stats'],\n  });\n\n  const totalDownloads = downloadStats?.reduce((sum, stat) => sum + stat.downloadCount, 0) || 0;\n  const averageRating = reviews?.length ? \n    (reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length).toFixed(1) : 0;\n\n  const renderStars = (rating: number) => {\n    return Array.from({ length: 5 }, (_, i) => (\n      <Star\n        key={i}\n        className={`w-5 h-5 ${\n          i < rating ? 'fill-yellow-400 text-yellow-400' : 'text-gray-300'\n        }`}\n      />\n    ));\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n    });\n  };\n\n  const getRatingDistribution = () => {\n    if (!reviews?.length) return Array(5).fill(0);\n    \n    const distribution = Array(5).fill(0);\n    reviews.forEach(review => {\n      distribution[review.rating - 1]++;\n    });\n    return distribution.reverse(); // Show 5 stars first\n  };\n\n  return (\n    <div className=\"min-h-screen bg-mums-pink\">\n      <Navigation />\n      \n      {/* Header Section */}\n      <section className=\"py-12 md:py-20\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <div className=\"relative inline-block\">\n              <HeartBackground />\n              <div className=\"relative z-10\">\n                <h1 className=\"text-4xl md:text-5xl font-bold text-mums-dark mb-6\">\n                  Community Reviews\n                </h1>\n                <p className=\"text-xl text-gray-700 max-w-2xl mx-auto\">\n                  See what our amazing community of mothers thinks about Mum's Space\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Stats Cards */}\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"grid md:grid-cols-3 gap-8 mb-12\">\n              <Card className=\"section-card p-8 text-center shadow-lg\">\n                <div className=\"w-20 h-20 mx-auto mb-6 bg-mums-accent rounded-full flex items-center justify-center\">\n                  <Users className=\"w-10 h-10 text-white\" />\n                </div>\n                <h3 className=\"text-4xl font-bold text-mums-dark mb-3 text-center\">\n                  {totalDownloads.toLocaleString()}\n                </h3>\n                <p className=\"text-gray-600 font-medium text-center\">Total Downloads</p>\n              </Card>\n\n              <Card className=\"section-card p-8 text-center shadow-lg\">\n                <div className=\"w-20 h-20 mx-auto mb-6 bg-mums-accent rounded-full flex items-center justify-center\">\n                  <Star className=\"w-10 h-10 text-white\" />\n                </div>\n                <h3 className=\"text-4xl font-bold text-mums-dark mb-3 text-center\">\n                  {averageRating}\n                </h3>\n                <div className=\"flex justify-center mb-3\">\n                  {renderStars(Math.round(Number(averageRating)))}\n                </div>\n                <p className=\"text-gray-600 font-medium text-center\">Average Rating</p>\n              </Card>\n\n              <Card className=\"section-card p-8 text-center shadow-lg\">\n                <div className=\"w-20 h-20 mx-auto mb-6 bg-mums-accent rounded-full flex items-center justify-center\">\n                  <CheckCircle className=\"w-10 h-10 text-white\" />\n                </div>\n                <h3 className=\"text-4xl font-bold text-mums-dark mb-3 text-center\">\n                  {reviews?.length || 0}\n                </h3>\n                <p className=\"text-gray-600 font-medium text-center\">Reviews</p>\n              </Card>\n            </div>\n          </div>\n\n          {/* Rating Distribution */}\n          {reviews && reviews.length > 0 && (\n            <Card className=\"section-card p-8 mb-12\">\n              <h3 className=\"text-2xl font-semibold text-mums-dark mb-6 text-center\">Rating Distribution</h3>\n              <div className=\"space-y-3\">\n                {getRatingDistribution().map((count, index) => {\n                  const stars = 5 - index;\n                  const percentage = reviews.length > 0 ? (count / reviews.length) * 100 : 0;\n                  \n                  return (\n                    <div key={stars} className=\"flex items-center gap-4\">\n                      <div className=\"flex items-center gap-1 w-20\">\n                        <span className=\"text-sm font-medium\">{stars}</span>\n                        <Star className=\"w-4 h-4 fill-yellow-400 text-yellow-400\" />\n                      </div>\n                      <div className=\"flex-1 bg-gray-200 rounded-full h-3\">\n                        <div\n                          className=\"bg-mums-accent h-3 rounded-full transition-all duration-300\"\n                          style={{ width: `${percentage}%` }}\n                        />\n                      </div>\n                      <span className=\"text-sm text-gray-600 w-12 text-right\">{count}</span>\n                    </div>\n                  );\n                })}\n              </div>\n            </Card>\n          )}\n        </div>\n      </section>\n\n\n\n      {/* Review Information Section */}\n      <section className=\"pb-8\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card className=\"section-card p-6 bg-gradient-to-r from-blue-50 to-purple-50 border-l-4 border-mums-accent\">\n            <div className=\"text-center\">\n              <h3 className=\"text-xl font-semibold text-mums-dark mb-3\">Want to Write a Review?</h3>\n              <p className=\"text-gray-700 mb-4\">\n                Only users of the Mum's Space app can write reviews. If you want to share your experience:\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-3 justify-center items-center\">\n                <span className=\"text-sm font-medium text-gray-600\">1. Download the app</span>\n                <span className=\"hidden sm:inline text-gray-400\">→</span>\n                <span className=\"text-sm font-medium text-gray-600\">2. Use it for a few days</span>\n                <span className=\"hidden sm:inline text-gray-400\">→</span>\n                <span className=\"text-sm font-medium text-gray-600\">3. Write your review from within the app</span>\n              </div>\n              <div className=\"mt-4\">\n                <a \n                  href=\"/#download\" \n                  className=\"inline-flex items-center px-6 py-2 bg-mums-accent hover:bg-mums-dark text-white font-semibold rounded-full transition-colors\"\n                >\n                  Download Mum's Space Now\n                </a>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </section>\n\n      {/* Reviews Section */}\n      <section className=\"pb-16\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {reviewsLoading ? (\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              {Array.from({ length: 6 }).map((_, i) => (\n                <Card key={i} className=\"section-card p-6\">\n                  <div className=\"animate-pulse\">\n                    <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-4\"></div>\n                    <div className=\"h-3 bg-gray-200 rounded w-full mb-2\"></div>\n                    <div className=\"h-3 bg-gray-200 rounded w-2/3 mb-4\"></div>\n                    <div className=\"h-6 bg-gray-200 rounded w-1/4\"></div>\n                  </div>\n                </Card>\n              ))}\n            </div>\n          ) : reviews && reviews.length > 0 ? (\n            <div className=\"grid gap-6\">\n              {reviews.map((review) => (\n                <ReviewCard key={review.id} review={review} isAdmin={false} />\n              ))}\n            </div>\n          ) : (\n            <Card className=\"section-card p-12 text-center\">\n              <div className=\"w-24 h-24 mx-auto mb-6 bg-gray-100 rounded-full flex items-center justify-center\">\n                <Star className=\"w-12 h-12 text-gray-400\" />\n              </div>\n              <h3 className=\"text-2xl font-semibold text-mums-dark mb-4\">No Reviews Yet</h3>\n              <p className=\"text-gray-600 max-w-md mx-auto\">\n                Be one of the first to download Mum's Space and share your experience with the community!\n              </p>\n            </Card>\n          )}\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Reviews;","size_bytes":9073},"client/src/pages/submit-review.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport ReviewForm from \"@/components/ReviewForm\";\nimport { Card } from \"@/components/ui/card\";\n\nconst SubmitReview = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [isValidUser, setIsValidUser] = useState(false);\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const userNameFromUrl = urlParams.get('userName');\n    \n    if (userNameFromUrl) {\n      setUserName(decodeURIComponent(userNameFromUrl));\n      setIsValidUser(true);\n    } else {\n      // No username parameter - this should only be accessible from the app\n      setIsValidUser(false);\n    }\n  }, []);\n\n  if (!isValidUser) {\n    return (\n      <div className=\"min-h-screen bg-mums-pink\">\n        <Navigation />\n        <section className=\"py-16\">\n          <div className=\"max-w-2xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <Card className=\"section-card p-8 text-center\">\n              <h2 className=\"text-2xl font-semibold text-mums-dark mb-4\">Access Restricted</h2>\n              <p className=\"text-gray-700 mb-6\">\n                This review form is only accessible through the Mum's Space app. \n                To write a review, you need to:\n              </p>\n              <div className=\"text-left mb-6 space-y-2\">\n                <p className=\"text-gray-600\">1. Download and install the Mum's Space app</p>\n                <p className=\"text-gray-600\">2. Use the app for a few days to experience our community</p>\n                <p className=\"text-gray-600\">3. Open the app and use the \"Write Review\" button</p>\n              </div>\n              <div className=\"space-y-3\">\n                <a \n                  href=\"/#download\" \n                  className=\"inline-block bg-mums-accent hover:bg-mums-dark text-white font-semibold py-3 px-6 rounded-xl transition-colors mr-4\"\n                >\n                  Download the App\n                </a>\n                <a \n                  href=\"/reviews\" \n                  className=\"inline-block bg-gray-500 hover:bg-gray-600 text-white font-semibold py-3 px-6 rounded-xl transition-colors\"\n                >\n                  View Existing Reviews\n                </a>\n              </div>\n            </Card>\n          </div>\n        </section>\n        <Footer />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-mums-pink\">\n      <Navigation />\n      \n      <section className=\"py-16\">\n        <div className=\"max-w-2xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card className=\"section-card p-8\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-3xl font-bold text-mums-dark mb-4\">Submit Your Review</h2>\n              <p className=\"text-gray-700\">\n                Welcome <strong>{userName}</strong>! Share your experience with other mothers.\n              </p>\n            </div>\n            <ReviewForm />\n          </Card>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default SubmitReview;","size_bytes":3107},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }","size_bytes":771},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}